// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ActiveEmergencyMode extends ethereum.Event {
  get params(): ActiveEmergencyMode__Params {
    return new ActiveEmergencyMode__Params(this);
  }
}

export class ActiveEmergencyMode__Params {
  _event: ActiveEmergencyMode;

  constructor(event: ActiveEmergencyMode) {
    this._event = event;
  }
}

export class AddSymbol extends ethereum.Event {
  get params(): AddSymbol__Params {
    return new AddSymbol__Params(this);
  }
}

export class AddSymbol__Params {
  _event: AddSymbol;

  constructor(event: AddSymbol) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tradingFee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get maxLeverage(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class DeactiveEmergencyMode extends ethereum.Event {
  get params(): DeactiveEmergencyMode__Params {
    return new DeactiveEmergencyMode__Params(this);
  }
}

export class DeactiveEmergencyMode__Params {
  _event: DeactiveEmergencyMode;

  constructor(event: DeactiveEmergencyMode) {
    this._event = event;
  }
}

export class DeregisterPartyB extends ethereum.Event {
  get params(): DeregisterPartyB__Params {
    return new DeregisterPartyB__Params(this);
  }
}

export class DeregisterPartyB__Params {
  _event: DeregisterPartyB;

  constructor(event: DeregisterPartyB) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get index(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PauseAccounting extends ethereum.Event {
  get params(): PauseAccounting__Params {
    return new PauseAccounting__Params(this);
  }
}

export class PauseAccounting__Params {
  _event: PauseAccounting;

  constructor(event: PauseAccounting) {
    this._event = event;
  }
}

export class PauseGlobal extends ethereum.Event {
  get params(): PauseGlobal__Params {
    return new PauseGlobal__Params(this);
  }
}

export class PauseGlobal__Params {
  _event: PauseGlobal;

  constructor(event: PauseGlobal) {
    this._event = event;
  }
}

export class PauseLiquidation extends ethereum.Event {
  get params(): PauseLiquidation__Params {
    return new PauseLiquidation__Params(this);
  }
}

export class PauseLiquidation__Params {
  _event: PauseLiquidation;

  constructor(event: PauseLiquidation) {
    this._event = event;
  }
}

export class PausePartyAActions extends ethereum.Event {
  get params(): PausePartyAActions__Params {
    return new PausePartyAActions__Params(this);
  }
}

export class PausePartyAActions__Params {
  _event: PausePartyAActions;

  constructor(event: PausePartyAActions) {
    this._event = event;
  }
}

export class PausePartyBActions extends ethereum.Event {
  get params(): PausePartyBActions__Params {
    return new PausePartyBActions__Params(this);
  }
}

export class PausePartyBActions__Params {
  _event: PausePartyBActions;

  constructor(event: PausePartyBActions) {
    this._event = event;
  }
}

export class RegisterPartyB extends ethereum.Event {
  get params(): RegisterPartyB__Params {
    return new RegisterPartyB__Params(this);
  }
}

export class RegisterPartyB__Params {
  _event: RegisterPartyB;

  constructor(event: RegisterPartyB) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetBalanceLimitPerUser extends ethereum.Event {
  get params(): SetBalanceLimitPerUser__Params {
    return new SetBalanceLimitPerUser__Params(this);
  }
}

export class SetBalanceLimitPerUser__Params {
  _event: SetBalanceLimitPerUser;

  constructor(event: SetBalanceLimitPerUser) {
    this._event = event;
  }

  get balanceLimitPerUser(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetCollateral extends ethereum.Event {
  get params(): SetCollateral__Params {
    return new SetCollateral__Params(this);
  }
}

export class SetCollateral__Params {
  _event: SetCollateral;

  constructor(event: SetCollateral) {
    this._event = event;
  }

  get collateral(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetDeallocateCooldown extends ethereum.Event {
  get params(): SetDeallocateCooldown__Params {
    return new SetDeallocateCooldown__Params(this);
  }
}

export class SetDeallocateCooldown__Params {
  _event: SetDeallocateCooldown;

  constructor(event: SetDeallocateCooldown) {
    this._event = event;
  }

  get oldDeallocateCooldown(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newDeallocateCooldown(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetFeeCollector extends ethereum.Event {
  get params(): SetFeeCollector__Params {
    return new SetFeeCollector__Params(this);
  }
}

export class SetFeeCollector__Params {
  _event: SetFeeCollector;

  constructor(event: SetFeeCollector) {
    this._event = event;
  }

  get oldFeeCollector(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFeeCollector(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetForceCancelCloseCooldown extends ethereum.Event {
  get params(): SetForceCancelCloseCooldown__Params {
    return new SetForceCancelCloseCooldown__Params(this);
  }
}

export class SetForceCancelCloseCooldown__Params {
  _event: SetForceCancelCloseCooldown;

  constructor(event: SetForceCancelCloseCooldown) {
    this._event = event;
  }

  get oldForceCancelCloseCooldown(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newForceCancelCloseCooldown(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetForceCancelCooldown extends ethereum.Event {
  get params(): SetForceCancelCooldown__Params {
    return new SetForceCancelCooldown__Params(this);
  }
}

export class SetForceCancelCooldown__Params {
  _event: SetForceCancelCooldown;

  constructor(event: SetForceCancelCooldown) {
    this._event = event;
  }

  get oldForceCancelCooldown(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newForceCancelCooldown(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetForceCloseCooldown extends ethereum.Event {
  get params(): SetForceCloseCooldown__Params {
    return new SetForceCloseCooldown__Params(this);
  }
}

export class SetForceCloseCooldown__Params {
  _event: SetForceCloseCooldown;

  constructor(event: SetForceCloseCooldown) {
    this._event = event;
  }

  get oldForceCloseCooldown(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newForceCloseCooldown(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetForceCloseGapRatio extends ethereum.Event {
  get params(): SetForceCloseGapRatio__Params {
    return new SetForceCloseGapRatio__Params(this);
  }
}

export class SetForceCloseGapRatio__Params {
  _event: SetForceCloseGapRatio;

  constructor(event: SetForceCloseGapRatio) {
    this._event = event;
  }

  get oldForceCloseGapRatio(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newForceCloseGapRatio(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetLiquidationTimeout extends ethereum.Event {
  get params(): SetLiquidationTimeout__Params {
    return new SetLiquidationTimeout__Params(this);
  }
}

export class SetLiquidationTimeout__Params {
  _event: SetLiquidationTimeout;

  constructor(event: SetLiquidationTimeout) {
    this._event = event;
  }

  get oldLiquidationTimeout(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newLiquidationTimeout(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetLiquidatorShare extends ethereum.Event {
  get params(): SetLiquidatorShare__Params {
    return new SetLiquidatorShare__Params(this);
  }
}

export class SetLiquidatorShare__Params {
  _event: SetLiquidatorShare;

  constructor(event: SetLiquidatorShare) {
    this._event = event;
  }

  get oldLiquidatorShare(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newLiquidatorShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetMuonConfig extends ethereum.Event {
  get params(): SetMuonConfig__Params {
    return new SetMuonConfig__Params(this);
  }
}

export class SetMuonConfig__Params {
  _event: SetMuonConfig;

  constructor(event: SetMuonConfig) {
    this._event = event;
  }

  get upnlValidTime(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get priceValidTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get priceQuantityValidTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetMuonIds extends ethereum.Event {
  get params(): SetMuonIds__Params {
    return new SetMuonIds__Params(this);
  }
}

export class SetMuonIds__Params {
  _event: SetMuonIds;

  constructor(event: SetMuonIds) {
    this._event = event;
  }

  get muonAppId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get gateway(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get x(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get parity(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class BalanceChangePartyA extends ethereum.Event {
  get params(): BalanceChangePartyA__Params {
    return new BalanceChangePartyA__Params(this);
  }
}

export class BalanceChangePartyA__Params {
  _event: BalanceChangePartyA;

  constructor(event: BalanceChangePartyA) {
    this._event = event;
  }

  get partyA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _type(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class BalanceChangePartyB extends ethereum.Event {
  get params(): BalanceChangePartyB__Params {
    return new BalanceChangePartyB__Params(this);
  }
}

export class BalanceChangePartyB__Params {
  _event: BalanceChangePartyB;

  constructor(event: BalanceChangePartyB) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _type(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class SetPartyBEmergencyStatus extends ethereum.Event {
  get params(): SetPartyBEmergencyStatus__Params {
    return new SetPartyBEmergencyStatus__Params(this);
  }
}

export class SetPartyBEmergencyStatus__Params {
  _event: SetPartyBEmergencyStatus;

  constructor(event: SetPartyBEmergencyStatus) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get status(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SetPendingQuotesValidLength extends ethereum.Event {
  get params(): SetPendingQuotesValidLength__Params {
    return new SetPendingQuotesValidLength__Params(this);
  }
}

export class SetPendingQuotesValidLength__Params {
  _event: SetPendingQuotesValidLength;

  constructor(event: SetPendingQuotesValidLength) {
    this._event = event;
  }

  get oldPendingQuotesValidLength(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newPendingQuotesValidLength(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetSuspendedAddress extends ethereum.Event {
  get params(): SetSuspendedAddress__Params {
    return new SetSuspendedAddress__Params(this);
  }
}

export class SetSuspendedAddress__Params {
  _event: SetSuspendedAddress;

  constructor(event: SetSuspendedAddress) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isSuspended(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SetSymbolAcceptableValues extends ethereum.Event {
  get params(): SetSymbolAcceptableValues__Params {
    return new SetSymbolAcceptableValues__Params(this);
  }
}

export class SetSymbolAcceptableValues__Params {
  _event: SetSymbolAcceptableValues;

  constructor(event: SetSymbolAcceptableValues) {
    this._event = event;
  }

  get symbolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldMinAcceptableQuoteValue(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get oldMinAcceptablePortionLF(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class SetSymbolFundingState extends ethereum.Event {
  get params(): SetSymbolFundingState__Params {
    return new SetSymbolFundingState__Params(this);
  }
}

export class SetSymbolFundingState__Params {
  _event: SetSymbolFundingState;

  constructor(event: SetSymbolFundingState) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetSymbolMaxLeverage extends ethereum.Event {
  get params(): SetSymbolMaxLeverage__Params {
    return new SetSymbolMaxLeverage__Params(this);
  }
}

export class SetSymbolMaxLeverage__Params {
  _event: SetSymbolMaxLeverage;

  constructor(event: SetSymbolMaxLeverage) {
    this._event = event;
  }

  get symbolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldMaxLeverage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maxLeverage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetSymbolMaxSlippage extends ethereum.Event {
  get params(): SetSymbolMaxSlippage__Params {
    return new SetSymbolMaxSlippage__Params(this);
  }
}

export class SetSymbolMaxSlippage__Params {
  _event: SetSymbolMaxSlippage;

  constructor(event: SetSymbolMaxSlippage) {
    this._event = event;
  }

  get symbolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldMaxSlippage(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get maxSlippage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetSymbolTradingFee extends ethereum.Event {
  get params(): SetSymbolTradingFee__Params {
    return new SetSymbolTradingFee__Params(this);
  }
}

export class SetSymbolTradingFee__Params {
  _event: SetSymbolTradingFee;

  constructor(event: SetSymbolTradingFee) {
    this._event = event;
  }

  get symbolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldTradingFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tradingFee(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetSymbolValidationState extends ethereum.Event {
  get params(): SetSymbolValidationState__Params {
    return new SetSymbolValidationState__Params(this);
  }
}

export class SetSymbolValidationState__Params {
  _event: SetSymbolValidationState;

  constructor(event: SetSymbolValidationState) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldState(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get isValid(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class UnpauseAccounting extends ethereum.Event {
  get params(): UnpauseAccounting__Params {
    return new UnpauseAccounting__Params(this);
  }
}

export class UnpauseAccounting__Params {
  _event: UnpauseAccounting;

  constructor(event: UnpauseAccounting) {
    this._event = event;
  }
}

export class UnpauseGlobal extends ethereum.Event {
  get params(): UnpauseGlobal__Params {
    return new UnpauseGlobal__Params(this);
  }
}

export class UnpauseGlobal__Params {
  _event: UnpauseGlobal;

  constructor(event: UnpauseGlobal) {
    this._event = event;
  }
}

export class UnpauseLiquidation extends ethereum.Event {
  get params(): UnpauseLiquidation__Params {
    return new UnpauseLiquidation__Params(this);
  }
}

export class UnpauseLiquidation__Params {
  _event: UnpauseLiquidation;

  constructor(event: UnpauseLiquidation) {
    this._event = event;
  }
}

export class UnpausePartyAActions extends ethereum.Event {
  get params(): UnpausePartyAActions__Params {
    return new UnpausePartyAActions__Params(this);
  }
}

export class UnpausePartyAActions__Params {
  _event: UnpausePartyAActions;

  constructor(event: UnpausePartyAActions) {
    this._event = event;
  }
}

export class UnpausePartyBActions extends ethereum.Event {
  get params(): UnpausePartyBActions__Params {
    return new UnpausePartyBActions__Params(this);
  }
}

export class UnpausePartyBActions__Params {
  _event: UnpausePartyBActions;

  constructor(event: UnpausePartyBActions) {
    this._event = event;
  }
}

export class DisputeForLiquidation extends ethereum.Event {
  get params(): DisputeForLiquidation__Params {
    return new DisputeForLiquidation__Params(this);
  }
}

export class DisputeForLiquidation__Params {
  _event: DisputeForLiquidation;

  constructor(event: DisputeForLiquidation) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FullyLiquidatedPartyB extends ethereum.Event {
  get params(): FullyLiquidatedPartyB__Params {
    return new FullyLiquidatedPartyB__Params(this);
  }
}

export class FullyLiquidatedPartyB__Params {
  _event: FullyLiquidatedPartyB;

  constructor(event: FullyLiquidatedPartyB) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LiquidatePartyA extends ethereum.Event {
  get params(): LiquidatePartyA__Params {
    return new LiquidatePartyA__Params(this);
  }
}

export class LiquidatePartyA__Params {
  _event: LiquidatePartyA;

  constructor(event: LiquidatePartyA) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get allocatedBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get upnl(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalUnrealizedLoss(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LiquidatePartyA1 extends ethereum.Event {
  get params(): LiquidatePartyA1__Params {
    return new LiquidatePartyA1__Params(this);
  }
}

export class LiquidatePartyA1__Params {
  _event: LiquidatePartyA1;

  constructor(event: LiquidatePartyA1) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LiquidatePartyB extends ethereum.Event {
  get params(): LiquidatePartyB__Params {
    return new LiquidatePartyB__Params(this);
  }
}

export class LiquidatePartyB__Params {
  _event: LiquidatePartyB;

  constructor(event: LiquidatePartyB) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get partyBAllocatedBalance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get upnl(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class LiquidatePartyB1 extends ethereum.Event {
  get params(): LiquidatePartyB1__Params {
    return new LiquidatePartyB1__Params(this);
  }
}

export class LiquidatePartyB1__Params {
  _event: LiquidatePartyB1;

  constructor(event: LiquidatePartyB1) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class LiquidatePendingPositionsPartyA extends ethereum.Event {
  get params(): LiquidatePendingPositionsPartyA__Params {
    return new LiquidatePendingPositionsPartyA__Params(this);
  }
}

export class LiquidatePendingPositionsPartyA__Params {
  _event: LiquidatePendingPositionsPartyA;

  constructor(event: LiquidatePendingPositionsPartyA) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LiquidatePositionsPartyA extends ethereum.Event {
  get params(): LiquidatePositionsPartyA__Params {
    return new LiquidatePositionsPartyA__Params(this);
  }
}

export class LiquidatePositionsPartyA__Params {
  _event: LiquidatePositionsPartyA;

  constructor(event: LiquidatePositionsPartyA) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quoteIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class LiquidatePositionsPartyB extends ethereum.Event {
  get params(): LiquidatePositionsPartyB__Params {
    return new LiquidatePositionsPartyB__Params(this);
  }
}

export class LiquidatePositionsPartyB__Params {
  _event: LiquidatePositionsPartyB;

  constructor(event: LiquidatePositionsPartyB) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get quoteIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class LiquidationDisputed extends ethereum.Event {
  get params(): LiquidationDisputed__Params {
    return new LiquidationDisputed__Params(this);
  }
}

export class LiquidationDisputed__Params {
  _event: LiquidationDisputed;

  constructor(event: LiquidationDisputed) {
    this._event = event;
  }

  get partyA(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SetSymbolsPrices extends ethereum.Event {
  get params(): SetSymbolsPrices__Params {
    return new SetSymbolsPrices__Params(this);
  }
}

export class SetSymbolsPrices__Params {
  _event: SetSymbolsPrices;

  constructor(event: SetSymbolsPrices) {
    this._event = event;
  }

  get liquidator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get symbolIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class SettlePartyALiquidation extends ethereum.Event {
  get params(): SettlePartyALiquidation__Params {
    return new SettlePartyALiquidation__Params(this);
  }
}

export class SettlePartyALiquidation__Params {
  _event: SettlePartyALiquidation;

  constructor(event: SettlePartyALiquidation) {
    this._event = event;
  }

  get partyA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyBs(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class ExpireQuote extends ethereum.Event {
  get params(): ExpireQuote__Params {
    return new ExpireQuote__Params(this);
  }
}

export class ExpireQuote__Params {
  _event: ExpireQuote;

  constructor(event: ExpireQuote) {
    this._event = event;
  }

  get quoteStatus(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get quoteId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ForceCancelCloseRequest extends ethereum.Event {
  get params(): ForceCancelCloseRequest__Params {
    return new ForceCancelCloseRequest__Params(this);
  }
}

export class ForceCancelCloseRequest__Params {
  _event: ForceCancelCloseRequest;

  constructor(event: ForceCancelCloseRequest) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class ForceCancelQuote extends ethereum.Event {
  get params(): ForceCancelQuote__Params {
    return new ForceCancelQuote__Params(this);
  }
}

export class ForceCancelQuote__Params {
  _event: ForceCancelQuote;

  constructor(event: ForceCancelQuote) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class ForceClosePosition extends ethereum.Event {
  get params(): ForceClosePosition__Params {
    return new ForceClosePosition__Params(this);
  }
}

export class ForceClosePosition__Params {
  _event: ForceClosePosition;

  constructor(event: ForceClosePosition) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get filledAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get closedPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class RequestToCancelCloseRequest extends ethereum.Event {
  get params(): RequestToCancelCloseRequest__Params {
    return new RequestToCancelCloseRequest__Params(this);
  }
}

export class RequestToCancelCloseRequest__Params {
  _event: RequestToCancelCloseRequest;

  constructor(event: RequestToCancelCloseRequest) {
    this._event = event;
  }

  get partyA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quoteId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class RequestToCancelQuote extends ethereum.Event {
  get params(): RequestToCancelQuote__Params {
    return new RequestToCancelQuote__Params(this);
  }
}

export class RequestToCancelQuote__Params {
  _event: RequestToCancelQuote;

  constructor(event: RequestToCancelQuote) {
    this._event = event;
  }

  get partyA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get quoteId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RequestToClosePosition extends ethereum.Event {
  get params(): RequestToClosePosition__Params {
    return new RequestToClosePosition__Params(this);
  }
}

export class RequestToClosePosition__Params {
  _event: RequestToClosePosition;

  constructor(event: RequestToClosePosition) {
    this._event = event;
  }

  get partyA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quoteId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get closePrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get quantityToClose(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get orderType(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get deadline(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class SendQuote extends ethereum.Event {
  get params(): SendQuote__Params {
    return new SendQuote__Params(this);
  }
}

export class SendQuote__Params {
  _event: SendQuote;

  constructor(event: SendQuote) {
    this._event = event;
  }

  get partyA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quoteId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get partyBsWhiteList(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get symbolId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get positionType(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get orderType(): i32 {
    return this._event.parameters[5].value.toI32();
  }

  get price(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get marketPrice(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get cva(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get lf(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get partyAmm(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get partyBmm(): BigInt {
    return this._event.parameters[12].value.toBigInt();
  }

  get tradingFee(): BigInt {
    return this._event.parameters[13].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._event.parameters[14].value.toBigInt();
  }
}

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class AllocateForPartyB extends ethereum.Event {
  get params(): AllocateForPartyB__Params {
    return new AllocateForPartyB__Params(this);
  }
}

export class AllocateForPartyB__Params {
  _event: AllocateForPartyB;

  constructor(event: AllocateForPartyB) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AllocatePartyA extends ethereum.Event {
  get params(): AllocatePartyA__Params {
    return new AllocatePartyA__Params(this);
  }
}

export class AllocatePartyA__Params {
  _event: AllocatePartyA;

  constructor(event: AllocatePartyA) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newAllocatedBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AllocatePartyA1 extends ethereum.Event {
  get params(): AllocatePartyA1__Params {
    return new AllocatePartyA1__Params(this);
  }
}

export class AllocatePartyA1__Params {
  _event: AllocatePartyA1;

  constructor(event: AllocatePartyA1) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DeallocateForPartyB extends ethereum.Event {
  get params(): DeallocateForPartyB__Params {
    return new DeallocateForPartyB__Params(this);
  }
}

export class DeallocateForPartyB__Params {
  _event: DeallocateForPartyB;

  constructor(event: DeallocateForPartyB) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DeallocatePartyA extends ethereum.Event {
  get params(): DeallocatePartyA__Params {
    return new DeallocatePartyA__Params(this);
  }
}

export class DeallocatePartyA__Params {
  _event: DeallocatePartyA;

  constructor(event: DeallocatePartyA) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newAllocatedBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class InternalTransfer extends ethereum.Event {
  get params(): InternalTransfer__Params {
    return new InternalTransfer__Params(this);
  }
}

export class InternalTransfer__Params {
  _event: InternalTransfer;

  constructor(event: InternalTransfer) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get userNewAllocatedBalance(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class DeallocatePartyA1 extends ethereum.Event {
  get params(): DeallocatePartyA1__Params {
    return new DeallocatePartyA1__Params(this);
  }
}

export class DeallocatePartyA1__Params {
  _event: DeallocatePartyA1;

  constructor(event: DeallocatePartyA1) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TransferAllocation extends ethereum.Event {
  get params(): TransferAllocation__Params {
    return new TransferAllocation__Params(this);
  }
}

export class TransferAllocation__Params {
  _event: TransferAllocation;

  constructor(event: TransferAllocation) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get origin(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get recipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AcceptCancelCloseRequest extends ethereum.Event {
  get params(): AcceptCancelCloseRequest__Params {
    return new AcceptCancelCloseRequest__Params(this);
  }
}

export class AcceptCancelCloseRequest__Params {
  _event: AcceptCancelCloseRequest;

  constructor(event: AcceptCancelCloseRequest) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class AcceptCancelRequest extends ethereum.Event {
  get params(): AcceptCancelRequest__Params {
    return new AcceptCancelRequest__Params(this);
  }
}

export class AcceptCancelRequest__Params {
  _event: AcceptCancelRequest;

  constructor(event: AcceptCancelRequest) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class AcceptCancelRequest1 extends ethereum.Event {
  get params(): AcceptCancelRequest1__Params {
    return new AcceptCancelRequest1__Params(this);
  }
}

export class AcceptCancelRequest1__Params {
  _event: AcceptCancelRequest1;

  constructor(event: AcceptCancelRequest1) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AllocatePartyB extends ethereum.Event {
  get params(): AllocatePartyB__Params {
    return new AllocatePartyB__Params(this);
  }
}

export class AllocatePartyB__Params {
  _event: AllocatePartyB;

  constructor(event: AllocatePartyB) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ChargeFundingRate extends ethereum.Event {
  get params(): ChargeFundingRate__Params {
    return new ChargeFundingRate__Params(this);
  }
}

export class ChargeFundingRate__Params {
  _event: ChargeFundingRate;

  constructor(event: ChargeFundingRate) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get quoteIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get rates(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class EmergencyClosePosition extends ethereum.Event {
  get params(): EmergencyClosePosition__Params {
    return new EmergencyClosePosition__Params(this);
  }
}

export class EmergencyClosePosition__Params {
  _event: EmergencyClosePosition;

  constructor(event: EmergencyClosePosition) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get filledAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get closedPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class FillCloseRequest extends ethereum.Event {
  get params(): FillCloseRequest__Params {
    return new FillCloseRequest__Params(this);
  }
}

export class FillCloseRequest__Params {
  _event: FillCloseRequest;

  constructor(event: FillCloseRequest) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get filledAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get closedPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[5].value.toI32();
  }
}

export class LockQuote extends ethereum.Event {
  get params(): LockQuote__Params {
    return new LockQuote__Params(this);
  }
}

export class LockQuote__Params {
  _event: LockQuote;

  constructor(event: LockQuote) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quoteId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OpenPosition extends ethereum.Event {
  get params(): OpenPosition__Params {
    return new OpenPosition__Params(this);
  }
}

export class OpenPosition__Params {
  _event: OpenPosition;

  constructor(event: OpenPosition) {
    this._event = event;
  }

  get quoteId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partyA(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get partyB(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get filledAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get openedPrice(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UnlockQuote extends ethereum.Event {
  get params(): UnlockQuote__Params {
    return new UnlockQuote__Params(this);
  }
}

export class UnlockQuote__Params {
  _event: UnlockQuote;

  constructor(event: UnlockQuote) {
    this._event = event;
  }

  get partyB(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get quoteId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get quoteStatus(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class SettleUpnl extends ethereum.Event {
  get params(): SettleUpnl__Params {
    return new SettleUpnl__Params(this);
  }
}

export class SettleUpnl__Params {
  _event: SettleUpnl;

  constructor(event: SettleUpnl) {
    this._event = event;
  }

  get settlementData(): Array<SettleUpnlSettlementDataStruct> {
    return this._event.parameters[0].value.toTupleArray<
      SettleUpnlSettlementDataStruct
    >();
  }

  get updatedPrices(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }

  get partyA(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get newPartyAAllocatedBalance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newPartyBsAllocatedBalances(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class SettleUpnlSettlementDataStruct extends ethereum.Tuple {
  get quoteId(): BigInt {
    return this[0].toBigInt();
  }

  get currentPrice(): BigInt {
    return this[1].toBigInt();
  }

  get partyBUpnlIndex(): i32 {
    return this[2].toI32();
  }
}

export class symmio__facetsResultFacets_Struct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get functionSelectors(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class symmio__balanceInfoOfPartyAResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): BigInt {
    return this.value6;
  }

  getValue7(): BigInt {
    return this.value7;
  }

  getValue8(): BigInt {
    return this.value8;
  }
}

export class symmio__balanceInfoOfPartyBResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): BigInt {
    return this.value6;
  }

  getValue7(): BigInt {
    return this.value7;
  }

  getValue8(): BigInt {
    return this.value8;
  }
}

export class symmio__coolDownsOfMAResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }
}

export class symmio__getLiquidatedStateOfPartyAResultValue0Struct extends ethereum.Tuple {
  get liquidationId(): Bytes {
    return this[0].toBytes();
  }

  get liquidationType(): i32 {
    return this[1].toI32();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get totalUnrealizedLoss(): BigInt {
    return this[3].toBigInt();
  }

  get deficit(): BigInt {
    return this[4].toBigInt();
  }

  get liquidationFee(): BigInt {
    return this[5].toBigInt();
  }

  get timestamp(): BigInt {
    return this[6].toBigInt();
  }

  get involvedPartyBCounts(): BigInt {
    return this[7].toBigInt();
  }

  get partyAAccumulatedUpnl(): BigInt {
    return this[8].toBigInt();
  }

  get disputed(): boolean {
    return this[9].toBoolean();
  }
}

export class symmio__getMuonConfigResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getUpnlValidTime(): BigInt {
    return this.value0;
  }

  getPriceValidTime(): BigInt {
    return this.value1;
  }

  getPriceQuantityValidTime(): BigInt {
    return this.value2;
  }
}

export class symmio__getMuonIdsResultMuonPublicKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get parity(): i32 {
    return this[1].toI32();
  }
}

export class symmio__getMuonIdsResult {
  value0: BigInt;
  value1: symmio__getMuonIdsResultMuonPublicKeyStruct;
  value2: Address;

  constructor(
    value0: BigInt,
    value1: symmio__getMuonIdsResultMuonPublicKeyStruct,
    value2: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }

  getMuonAppId(): BigInt {
    return this.value0;
  }

  getMuonPublicKey(): symmio__getMuonIdsResultMuonPublicKeyStruct {
    return this.value1;
  }

  getValidGateway(): Address {
    return this.value2;
  }
}

export class symmio__getPartyAOpenPositionsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get partyBsWhiteList(): Array<Address> {
    return this[1].toAddressArray();
  }

  get symbolId(): BigInt {
    return this[2].toBigInt();
  }

  get positionType(): i32 {
    return this[3].toI32();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get openedPrice(): BigInt {
    return this[5].toBigInt();
  }

  get initialOpenedPrice(): BigInt {
    return this[6].toBigInt();
  }

  get requestedOpenPrice(): BigInt {
    return this[7].toBigInt();
  }

  get marketPrice(): BigInt {
    return this[8].toBigInt();
  }

  get quantity(): BigInt {
    return this[9].toBigInt();
  }

  get closedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get initialLockedValues(): symmio__getPartyAOpenPositionsResultValue0InitialLockedValuesStruct {
    return changetype<
      symmio__getPartyAOpenPositionsResultValue0InitialLockedValuesStruct
    >(this[11].toTuple());
  }

  get lockedValues(): symmio__getPartyAOpenPositionsResultValue0LockedValuesStruct {
    return changetype<
      symmio__getPartyAOpenPositionsResultValue0LockedValuesStruct
    >(this[12].toTuple());
  }

  get maxFundingRate(): BigInt {
    return this[13].toBigInt();
  }

  get partyA(): Address {
    return this[14].toAddress();
  }

  get partyB(): Address {
    return this[15].toAddress();
  }

  get quoteStatus(): i32 {
    return this[16].toI32();
  }

  get avgClosedPrice(): BigInt {
    return this[17].toBigInt();
  }

  get requestedClosePrice(): BigInt {
    return this[18].toBigInt();
  }

  get quantityToClose(): BigInt {
    return this[19].toBigInt();
  }

  get parentId(): BigInt {
    return this[20].toBigInt();
  }

  get createTimestamp(): BigInt {
    return this[21].toBigInt();
  }

  get statusModifyTimestamp(): BigInt {
    return this[22].toBigInt();
  }

  get lastFundingPaymentTimestamp(): BigInt {
    return this[23].toBigInt();
  }

  get deadline(): BigInt {
    return this[24].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[25].toBigInt();
  }
}

export class symmio__getPartyAOpenPositionsResultValue0InitialLockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getPartyAOpenPositionsResultValue0LockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getPartyBOpenPositionsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get partyBsWhiteList(): Array<Address> {
    return this[1].toAddressArray();
  }

  get symbolId(): BigInt {
    return this[2].toBigInt();
  }

  get positionType(): i32 {
    return this[3].toI32();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get openedPrice(): BigInt {
    return this[5].toBigInt();
  }

  get initialOpenedPrice(): BigInt {
    return this[6].toBigInt();
  }

  get requestedOpenPrice(): BigInt {
    return this[7].toBigInt();
  }

  get marketPrice(): BigInt {
    return this[8].toBigInt();
  }

  get quantity(): BigInt {
    return this[9].toBigInt();
  }

  get closedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get initialLockedValues(): symmio__getPartyBOpenPositionsResultValue0InitialLockedValuesStruct {
    return changetype<
      symmio__getPartyBOpenPositionsResultValue0InitialLockedValuesStruct
    >(this[11].toTuple());
  }

  get lockedValues(): symmio__getPartyBOpenPositionsResultValue0LockedValuesStruct {
    return changetype<
      symmio__getPartyBOpenPositionsResultValue0LockedValuesStruct
    >(this[12].toTuple());
  }

  get maxFundingRate(): BigInt {
    return this[13].toBigInt();
  }

  get partyA(): Address {
    return this[14].toAddress();
  }

  get partyB(): Address {
    return this[15].toAddress();
  }

  get quoteStatus(): i32 {
    return this[16].toI32();
  }

  get avgClosedPrice(): BigInt {
    return this[17].toBigInt();
  }

  get requestedClosePrice(): BigInt {
    return this[18].toBigInt();
  }

  get quantityToClose(): BigInt {
    return this[19].toBigInt();
  }

  get parentId(): BigInt {
    return this[20].toBigInt();
  }

  get createTimestamp(): BigInt {
    return this[21].toBigInt();
  }

  get statusModifyTimestamp(): BigInt {
    return this[22].toBigInt();
  }

  get lastFundingPaymentTimestamp(): BigInt {
    return this[23].toBigInt();
  }

  get deadline(): BigInt {
    return this[24].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[25].toBigInt();
  }
}

export class symmio__getPartyBOpenPositionsResultValue0InitialLockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getPartyBOpenPositionsResultValue0LockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getQuoteResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get partyBsWhiteList(): Array<Address> {
    return this[1].toAddressArray();
  }

  get symbolId(): BigInt {
    return this[2].toBigInt();
  }

  get positionType(): i32 {
    return this[3].toI32();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get openedPrice(): BigInt {
    return this[5].toBigInt();
  }

  get initialOpenedPrice(): BigInt {
    return this[6].toBigInt();
  }

  get requestedOpenPrice(): BigInt {
    return this[7].toBigInt();
  }

  get marketPrice(): BigInt {
    return this[8].toBigInt();
  }

  get quantity(): BigInt {
    return this[9].toBigInt();
  }

  get closedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get initialLockedValues(): symmio__getQuoteResultValue0InitialLockedValuesStruct {
    return changetype<symmio__getQuoteResultValue0InitialLockedValuesStruct>(
      this[11].toTuple()
    );
  }

  get lockedValues(): symmio__getQuoteResultValue0LockedValuesStruct {
    return changetype<symmio__getQuoteResultValue0LockedValuesStruct>(
      this[12].toTuple()
    );
  }

  get maxFundingRate(): BigInt {
    return this[13].toBigInt();
  }

  get partyA(): Address {
    return this[14].toAddress();
  }

  get partyB(): Address {
    return this[15].toAddress();
  }

  get quoteStatus(): i32 {
    return this[16].toI32();
  }

  get avgClosedPrice(): BigInt {
    return this[17].toBigInt();
  }

  get requestedClosePrice(): BigInt {
    return this[18].toBigInt();
  }

  get quantityToClose(): BigInt {
    return this[19].toBigInt();
  }

  get parentId(): BigInt {
    return this[20].toBigInt();
  }

  get createTimestamp(): BigInt {
    return this[21].toBigInt();
  }

  get statusModifyTimestamp(): BigInt {
    return this[22].toBigInt();
  }

  get lastFundingPaymentTimestamp(): BigInt {
    return this[23].toBigInt();
  }

  get deadline(): BigInt {
    return this[24].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[25].toBigInt();
  }
}

export class symmio__getQuoteResultValue0InitialLockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getQuoteResultValue0LockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getQuotesResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get partyBsWhiteList(): Array<Address> {
    return this[1].toAddressArray();
  }

  get symbolId(): BigInt {
    return this[2].toBigInt();
  }

  get positionType(): i32 {
    return this[3].toI32();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get openedPrice(): BigInt {
    return this[5].toBigInt();
  }

  get initialOpenedPrice(): BigInt {
    return this[6].toBigInt();
  }

  get requestedOpenPrice(): BigInt {
    return this[7].toBigInt();
  }

  get marketPrice(): BigInt {
    return this[8].toBigInt();
  }

  get quantity(): BigInt {
    return this[9].toBigInt();
  }

  get closedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get initialLockedValues(): symmio__getQuotesResultValue0InitialLockedValuesStruct {
    return changetype<symmio__getQuotesResultValue0InitialLockedValuesStruct>(
      this[11].toTuple()
    );
  }

  get lockedValues(): symmio__getQuotesResultValue0LockedValuesStruct {
    return changetype<symmio__getQuotesResultValue0LockedValuesStruct>(
      this[12].toTuple()
    );
  }

  get maxFundingRate(): BigInt {
    return this[13].toBigInt();
  }

  get partyA(): Address {
    return this[14].toAddress();
  }

  get partyB(): Address {
    return this[15].toAddress();
  }

  get quoteStatus(): i32 {
    return this[16].toI32();
  }

  get avgClosedPrice(): BigInt {
    return this[17].toBigInt();
  }

  get requestedClosePrice(): BigInt {
    return this[18].toBigInt();
  }

  get quantityToClose(): BigInt {
    return this[19].toBigInt();
  }

  get parentId(): BigInt {
    return this[20].toBigInt();
  }

  get createTimestamp(): BigInt {
    return this[21].toBigInt();
  }

  get statusModifyTimestamp(): BigInt {
    return this[22].toBigInt();
  }

  get lastFundingPaymentTimestamp(): BigInt {
    return this[23].toBigInt();
  }

  get deadline(): BigInt {
    return this[24].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[25].toBigInt();
  }
}

export class symmio__getQuotesResultValue0InitialLockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getQuotesResultValue0LockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getQuotesByParentResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get partyBsWhiteList(): Array<Address> {
    return this[1].toAddressArray();
  }

  get symbolId(): BigInt {
    return this[2].toBigInt();
  }

  get positionType(): i32 {
    return this[3].toI32();
  }

  get orderType(): i32 {
    return this[4].toI32();
  }

  get openedPrice(): BigInt {
    return this[5].toBigInt();
  }

  get initialOpenedPrice(): BigInt {
    return this[6].toBigInt();
  }

  get requestedOpenPrice(): BigInt {
    return this[7].toBigInt();
  }

  get marketPrice(): BigInt {
    return this[8].toBigInt();
  }

  get quantity(): BigInt {
    return this[9].toBigInt();
  }

  get closedAmount(): BigInt {
    return this[10].toBigInt();
  }

  get initialLockedValues(): symmio__getQuotesByParentResultValue0InitialLockedValuesStruct {
    return changetype<
      symmio__getQuotesByParentResultValue0InitialLockedValuesStruct
    >(this[11].toTuple());
  }

  get lockedValues(): symmio__getQuotesByParentResultValue0LockedValuesStruct {
    return changetype<symmio__getQuotesByParentResultValue0LockedValuesStruct>(
      this[12].toTuple()
    );
  }

  get maxFundingRate(): BigInt {
    return this[13].toBigInt();
  }

  get partyA(): Address {
    return this[14].toAddress();
  }

  get partyB(): Address {
    return this[15].toAddress();
  }

  get quoteStatus(): i32 {
    return this[16].toI32();
  }

  get avgClosedPrice(): BigInt {
    return this[17].toBigInt();
  }

  get requestedClosePrice(): BigInt {
    return this[18].toBigInt();
  }

  get quantityToClose(): BigInt {
    return this[19].toBigInt();
  }

  get parentId(): BigInt {
    return this[20].toBigInt();
  }

  get createTimestamp(): BigInt {
    return this[21].toBigInt();
  }

  get statusModifyTimestamp(): BigInt {
    return this[22].toBigInt();
  }

  get lastFundingPaymentTimestamp(): BigInt {
    return this[23].toBigInt();
  }

  get deadline(): BigInt {
    return this[24].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[25].toBigInt();
  }
}

export class symmio__getQuotesByParentResultValue0InitialLockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getQuotesByParentResultValue0LockedValuesStruct extends ethereum.Tuple {
  get cva(): BigInt {
    return this[0].toBigInt();
  }

  get lf(): BigInt {
    return this[1].toBigInt();
  }

  get partyAmm(): BigInt {
    return this[2].toBigInt();
  }

  get partyBmm(): BigInt {
    return this[3].toBigInt();
  }
}

export class symmio__getSettlementStatesResultValue0Struct extends ethereum.Tuple {
  get actualAmount(): BigInt {
    return this[0].toBigInt();
  }

  get expectedAmount(): BigInt {
    return this[1].toBigInt();
  }

  get cva(): BigInt {
    return this[2].toBigInt();
  }

  get pending(): boolean {
    return this[3].toBoolean();
  }
}

export class symmio__getSymbolResultValue0Struct extends ethereum.Tuple {
  get symbolId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get isValid(): boolean {
    return this[2].toBoolean();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this[3].toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this[4].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[5].toBigInt();
  }

  get maxLeverage(): BigInt {
    return this[6].toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this[7].toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this[8].toBigInt();
  }
}

export class symmio__getSymbolsResultValue0Struct extends ethereum.Tuple {
  get symbolId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get isValid(): boolean {
    return this[2].toBoolean();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this[3].toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this[4].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[5].toBigInt();
  }

  get maxLeverage(): BigInt {
    return this[6].toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this[7].toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this[8].toBigInt();
  }
}

export class symmio__partyAStatsResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: BigInt;
  value12: BigInt;
  value13: BigInt;

  constructor(
    value0: boolean,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: BigInt,
    value12: BigInt,
    value13: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    map.set("value12", ethereum.Value.fromUnsignedBigInt(this.value12));
    map.set("value13", ethereum.Value.fromUnsignedBigInt(this.value13));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): BigInt {
    return this.value6;
  }

  getValue7(): BigInt {
    return this.value7;
  }

  getValue8(): BigInt {
    return this.value8;
  }

  getValue9(): BigInt {
    return this.value9;
  }

  getValue10(): BigInt {
    return this.value10;
  }

  getValue11(): BigInt {
    return this.value11;
  }

  getValue12(): BigInt {
    return this.value12;
  }

  getValue13(): BigInt {
    return this.value13;
  }
}

export class symmio__pauseStateResult {
  value0: boolean;
  value1: boolean;
  value2: boolean;
  value3: boolean;
  value4: boolean;
  value5: boolean;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: boolean,
    value3: boolean,
    value4: boolean,
    value5: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromBoolean(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    return map;
  }

  getGlobalPaused(): boolean {
    return this.value0;
  }

  getLiquidationPaused(): boolean {
    return this.value1;
  }

  getAccountingPaused(): boolean {
    return this.value2;
  }

  getPartyBActionsPaused(): boolean {
    return this.value3;
  }

  getPartyAActionsPaused(): boolean {
    return this.value4;
  }

  getEmergencyMode(): boolean {
    return this.value5;
  }
}

export class symmio__symbolsByQuoteIdResultValue0Struct extends ethereum.Tuple {
  get symbolId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get isValid(): boolean {
    return this[2].toBoolean();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this[3].toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this[4].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[5].toBigInt();
  }

  get maxLeverage(): BigInt {
    return this[6].toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this[7].toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this[8].toBigInt();
  }
}

export class symmio extends ethereum.SmartContract {
  static bind(address: Address): symmio {
    return new symmio("symmio", address);
  }

  facetAddress(_functionSelector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(_functionSelector)
    ]);

    return result[0].toAddress();
  }

  try_facetAddress(_functionSelector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(_functionSelector)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors(_facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors(
    _facet: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  facets(): Array<symmio__facetsResultFacets_Struct> {
    let result = super.call("facets", "facets():((address,bytes4[])[])", []);

    return result[0].toTupleArray<symmio__facetsResultFacets_Struct>();
  }

  try_facets(): ethereum.CallResult<Array<symmio__facetsResultFacets_Struct>> {
    let result = super.tryCall("facets", "facets():((address,bytes4[])[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__facetsResultFacets_Struct>()
    );
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  allocatedBalanceOfPartyA(partyA: Address): BigInt {
    let result = super.call(
      "allocatedBalanceOfPartyA",
      "allocatedBalanceOfPartyA(address):(uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigInt();
  }

  try_allocatedBalanceOfPartyA(partyA: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allocatedBalanceOfPartyA",
      "allocatedBalanceOfPartyA(address):(uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allocatedBalanceOfPartyB(partyB: Address, partyA: Address): BigInt {
    let result = super.call(
      "allocatedBalanceOfPartyB",
      "allocatedBalanceOfPartyB(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigInt();
  }

  try_allocatedBalanceOfPartyB(
    partyB: Address,
    partyA: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allocatedBalanceOfPartyB",
      "allocatedBalanceOfPartyB(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allocatedBalanceOfPartyBs(
    partyA: Address,
    partyBs: Array<Address>
  ): Array<BigInt> {
    let result = super.call(
      "allocatedBalanceOfPartyBs",
      "allocatedBalanceOfPartyBs(address,address[]):(uint256[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromAddressArray(partyBs)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_allocatedBalanceOfPartyBs(
    partyA: Address,
    partyBs: Array<Address>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "allocatedBalanceOfPartyBs",
      "allocatedBalanceOfPartyBs(address,address[]):(uint256[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromAddressArray(partyBs)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  balanceInfoOfPartyA(partyA: Address): symmio__balanceInfoOfPartyAResult {
    let result = super.call(
      "balanceInfoOfPartyA",
      "balanceInfoOfPartyA(address):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );

    return new symmio__balanceInfoOfPartyAResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt()
    );
  }

  try_balanceInfoOfPartyA(
    partyA: Address
  ): ethereum.CallResult<symmio__balanceInfoOfPartyAResult> {
    let result = super.tryCall(
      "balanceInfoOfPartyA",
      "balanceInfoOfPartyA(address):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmio__balanceInfoOfPartyAResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt()
      )
    );
  }

  balanceInfoOfPartyB(
    partyB: Address,
    partyA: Address
  ): symmio__balanceInfoOfPartyBResult {
    let result = super.call(
      "balanceInfoOfPartyB",
      "balanceInfoOfPartyB(address,address):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );

    return new symmio__balanceInfoOfPartyBResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt()
    );
  }

  try_balanceInfoOfPartyB(
    partyB: Address,
    partyA: Address
  ): ethereum.CallResult<symmio__balanceInfoOfPartyBResult> {
    let result = super.tryCall(
      "balanceInfoOfPartyB",
      "balanceInfoOfPartyB(address,address):(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmio__balanceInfoOfPartyBResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt()
      )
    );
  }

  balanceOf(user: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  coolDownsOfMA(): symmio__coolDownsOfMAResult {
    let result = super.call(
      "coolDownsOfMA",
      "coolDownsOfMA():(uint256,uint256,uint256,uint256)",
      []
    );

    return new symmio__coolDownsOfMAResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_coolDownsOfMA(): ethereum.CallResult<symmio__coolDownsOfMAResult> {
    let result = super.tryCall(
      "coolDownsOfMA",
      "coolDownsOfMA():(uint256,uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmio__coolDownsOfMAResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  forceCloseGapRatio(): BigInt {
    let result = super.call(
      "forceCloseGapRatio",
      "forceCloseGapRatio():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_forceCloseGapRatio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "forceCloseGapRatio",
      "forceCloseGapRatio():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBalanceLimitPerUser(): BigInt {
    let result = super.call(
      "getBalanceLimitPerUser",
      "getBalanceLimitPerUser():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getBalanceLimitPerUser(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBalanceLimitPerUser",
      "getBalanceLimitPerUser():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCollateral(): Address {
    let result = super.call("getCollateral", "getCollateral():(address)", []);

    return result[0].toAddress();
  }

  try_getCollateral(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCollateral",
      "getCollateral():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFeeCollector(): Address {
    let result = super.call(
      "getFeeCollector",
      "getFeeCollector():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getFeeCollector(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFeeCollector",
      "getFeeCollector():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLiquidatedStateOfPartyA(
    partyA: Address
  ): symmio__getLiquidatedStateOfPartyAResultValue0Struct {
    let result = super.call(
      "getLiquidatedStateOfPartyA",
      "getLiquidatedStateOfPartyA(address):((bytes,uint8,int256,int256,uint256,uint256,uint256,uint256,int256,bool))",
      [ethereum.Value.fromAddress(partyA)]
    );

    return changetype<symmio__getLiquidatedStateOfPartyAResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getLiquidatedStateOfPartyA(
    partyA: Address
  ): ethereum.CallResult<symmio__getLiquidatedStateOfPartyAResultValue0Struct> {
    let result = super.tryCall(
      "getLiquidatedStateOfPartyA",
      "getLiquidatedStateOfPartyA(address):((bytes,uint8,int256,int256,uint256,uint256,uint256,uint256,int256,bool))",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<symmio__getLiquidatedStateOfPartyAResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getMuonConfig(): symmio__getMuonConfigResult {
    let result = super.call(
      "getMuonConfig",
      "getMuonConfig():(uint256,uint256,uint256)",
      []
    );

    return new symmio__getMuonConfigResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getMuonConfig(): ethereum.CallResult<symmio__getMuonConfigResult> {
    let result = super.tryCall(
      "getMuonConfig",
      "getMuonConfig():(uint256,uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmio__getMuonConfigResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getMuonIds(): symmio__getMuonIdsResult {
    let result = super.call(
      "getMuonIds",
      "getMuonIds():(uint256,(uint256,uint8),address)",
      []
    );

    return new symmio__getMuonIdsResult(
      result[0].toBigInt(),
      changetype<symmio__getMuonIdsResultMuonPublicKeyStruct>(
        result[1].toTuple()
      ),
      result[2].toAddress()
    );
  }

  try_getMuonIds(): ethereum.CallResult<symmio__getMuonIdsResult> {
    let result = super.tryCall(
      "getMuonIds",
      "getMuonIds():(uint256,(uint256,uint8),address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmio__getMuonIdsResult(
        value[0].toBigInt(),
        changetype<symmio__getMuonIdsResultMuonPublicKeyStruct>(
          value[1].toTuple()
        ),
        value[2].toAddress()
      )
    );
  }

  getPartyAOpenPositions(
    partyA: Address,
    start: BigInt,
    size: BigInt
  ): Array<symmio__getPartyAOpenPositionsResultValue0Struct> {
    let result = super.call(
      "getPartyAOpenPositions",
      "getPartyAOpenPositions(address,uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );

    return result[0].toTupleArray<
      symmio__getPartyAOpenPositionsResultValue0Struct
    >();
  }

  try_getPartyAOpenPositions(
    partyA: Address,
    start: BigInt,
    size: BigInt
  ): ethereum.CallResult<
    Array<symmio__getPartyAOpenPositionsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getPartyAOpenPositions",
      "getPartyAOpenPositions(address,uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__getPartyAOpenPositionsResultValue0Struct>()
    );
  }

  getPartyAPendingQuotes(partyA: Address): Array<BigInt> {
    let result = super.call(
      "getPartyAPendingQuotes",
      "getPartyAPendingQuotes(address):(uint256[])",
      [ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigIntArray();
  }

  try_getPartyAPendingQuotes(
    partyA: Address
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPartyAPendingQuotes",
      "getPartyAPendingQuotes(address):(uint256[])",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getPartyBEmergencyStatus(partyB: Address): boolean {
    let result = super.call(
      "getPartyBEmergencyStatus",
      "getPartyBEmergencyStatus(address):(bool)",
      [ethereum.Value.fromAddress(partyB)]
    );

    return result[0].toBoolean();
  }

  try_getPartyBEmergencyStatus(partyB: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getPartyBEmergencyStatus",
      "getPartyBEmergencyStatus(address):(bool)",
      [ethereum.Value.fromAddress(partyB)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPartyBOpenPositions(
    partyB: Address,
    partyA: Address,
    start: BigInt,
    size: BigInt
  ): Array<symmio__getPartyBOpenPositionsResultValue0Struct> {
    let result = super.call(
      "getPartyBOpenPositions",
      "getPartyBOpenPositions(address,address,uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(partyB),
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );

    return result[0].toTupleArray<
      symmio__getPartyBOpenPositionsResultValue0Struct
    >();
  }

  try_getPartyBOpenPositions(
    partyB: Address,
    partyA: Address,
    start: BigInt,
    size: BigInt
  ): ethereum.CallResult<
    Array<symmio__getPartyBOpenPositionsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getPartyBOpenPositions",
      "getPartyBOpenPositions(address,address,uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(partyB),
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__getPartyBOpenPositionsResultValue0Struct>()
    );
  }

  getPartyBPendingQuotes(partyB: Address, partyA: Address): Array<BigInt> {
    let result = super.call(
      "getPartyBPendingQuotes",
      "getPartyBPendingQuotes(address,address):(uint256[])",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigIntArray();
  }

  try_getPartyBPendingQuotes(
    partyB: Address,
    partyA: Address
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPartyBPendingQuotes",
      "getPartyBPendingQuotes(address,address):(uint256[])",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getQuote(quoteId: BigInt): symmio__getQuoteResultValue0Struct {
    let result = super.call(
      "getQuote",
      "getQuote(uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(quoteId)]
    );

    return changetype<symmio__getQuoteResultValue0Struct>(result[0].toTuple());
  }

  try_getQuote(
    quoteId: BigInt
  ): ethereum.CallResult<symmio__getQuoteResultValue0Struct> {
    let result = super.tryCall(
      "getQuote",
      "getQuote(uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(quoteId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<symmio__getQuoteResultValue0Struct>(value[0].toTuple())
    );
  }

  getQuotes(
    partyA: Address,
    start: BigInt,
    size: BigInt
  ): Array<symmio__getQuotesResultValue0Struct> {
    let result = super.call(
      "getQuotes",
      "getQuotes(address,uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );

    return result[0].toTupleArray<symmio__getQuotesResultValue0Struct>();
  }

  try_getQuotes(
    partyA: Address,
    start: BigInt,
    size: BigInt
  ): ethereum.CallResult<Array<symmio__getQuotesResultValue0Struct>> {
    let result = super.tryCall(
      "getQuotes",
      "getQuotes(address,uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__getQuotesResultValue0Struct>()
    );
  }

  getQuotesByParent(
    quoteId: BigInt,
    size: BigInt
  ): Array<symmio__getQuotesByParentResultValue0Struct> {
    let result = super.call(
      "getQuotesByParent",
      "getQuotesByParent(uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromUnsignedBigInt(quoteId),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );

    return result[0].toTupleArray<
      symmio__getQuotesByParentResultValue0Struct
    >();
  }

  try_getQuotesByParent(
    quoteId: BigInt,
    size: BigInt
  ): ethereum.CallResult<Array<symmio__getQuotesByParentResultValue0Struct>> {
    let result = super.tryCall(
      "getQuotesByParent",
      "getQuotesByParent(uint256,uint256):((uint256,address[],uint256,uint8,uint8,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256,uint256,uint256),(uint256,uint256,uint256,uint256),uint256,address,address,uint8,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromUnsignedBigInt(quoteId),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__getQuotesByParentResultValue0Struct>()
    );
  }

  getRoleHash(str: string): Bytes {
    let result = super.call("getRoleHash", "getRoleHash(string):(bytes32)", [
      ethereum.Value.fromString(str)
    ]);

    return result[0].toBytes();
  }

  try_getRoleHash(str: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getRoleHash", "getRoleHash(string):(bytes32)", [
      ethereum.Value.fromString(str)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSettlementStates(
    partyA: Address,
    partyBs: Array<Address>
  ): Array<symmio__getSettlementStatesResultValue0Struct> {
    let result = super.call(
      "getSettlementStates",
      "getSettlementStates(address,address[]):((int256,int256,uint256,bool)[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromAddressArray(partyBs)
      ]
    );

    return result[0].toTupleArray<
      symmio__getSettlementStatesResultValue0Struct
    >();
  }

  try_getSettlementStates(
    partyA: Address,
    partyBs: Array<Address>
  ): ethereum.CallResult<Array<symmio__getSettlementStatesResultValue0Struct>> {
    let result = super.tryCall(
      "getSettlementStates",
      "getSettlementStates(address,address[]):((int256,int256,uint256,bool)[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromAddressArray(partyBs)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__getSettlementStatesResultValue0Struct>()
    );
  }

  getSymbol(symbolId: BigInt): symmio__getSymbolResultValue0Struct {
    let result = super.call(
      "getSymbol",
      "getSymbol(uint256):((uint256,string,bool,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(symbolId)]
    );

    return changetype<symmio__getSymbolResultValue0Struct>(result[0].toTuple());
  }

  try_getSymbol(
    symbolId: BigInt
  ): ethereum.CallResult<symmio__getSymbolResultValue0Struct> {
    let result = super.tryCall(
      "getSymbol",
      "getSymbol(uint256):((uint256,string,bool,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(symbolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<symmio__getSymbolResultValue0Struct>(value[0].toTuple())
    );
  }

  getSymbols(
    start: BigInt,
    size: BigInt
  ): Array<symmio__getSymbolsResultValue0Struct> {
    let result = super.call(
      "getSymbols",
      "getSymbols(uint256,uint256):((uint256,string,bool,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );

    return result[0].toTupleArray<symmio__getSymbolsResultValue0Struct>();
  }

  try_getSymbols(
    start: BigInt,
    size: BigInt
  ): ethereum.CallResult<Array<symmio__getSymbolsResultValue0Struct>> {
    let result = super.tryCall(
      "getSymbols",
      "getSymbols(uint256,uint256):((uint256,string,bool,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__getSymbolsResultValue0Struct>()
    );
  }

  hasRole(user: Address, role: Bytes): boolean {
    let result = super.call("hasRole", "hasRole(address,bytes32):(bool)", [
      ethereum.Value.fromAddress(user),
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(user: Address, role: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(address,bytes32):(bool)", [
      ethereum.Value.fromAddress(user),
      ethereum.Value.fromFixedBytes(role)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPartyALiquidated(partyA: Address): boolean {
    let result = super.call(
      "isPartyALiquidated",
      "isPartyALiquidated(address):(bool)",
      [ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBoolean();
  }

  try_isPartyALiquidated(partyA: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPartyALiquidated",
      "isPartyALiquidated(address):(bool)",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPartyB(user: Address): boolean {
    let result = super.call("isPartyB", "isPartyB(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBoolean();
  }

  try_isPartyB(user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPartyB", "isPartyB(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPartyBLiquidated(partyB: Address, partyA: Address): boolean {
    let result = super.call(
      "isPartyBLiquidated",
      "isPartyBLiquidated(address,address):(bool)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBoolean();
  }

  try_isPartyBLiquidated(
    partyB: Address,
    partyA: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isPartyBLiquidated",
      "isPartyBLiquidated(address,address):(bool)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSuspended(user: Address): boolean {
    let result = super.call("isSuspended", "isSuspended(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBoolean();
  }

  try_isSuspended(user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isSuspended", "isSuspended(address):(bool)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  liquidationTimeout(): BigInt {
    let result = super.call(
      "liquidationTimeout",
      "liquidationTimeout():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_liquidationTimeout(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "liquidationTimeout",
      "liquidationTimeout():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidatorShare(): BigInt {
    let result = super.call(
      "liquidatorShare",
      "liquidatorShare():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_liquidatorShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "liquidatorShare",
      "liquidatorShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nonceOfPartyA(partyA: Address): BigInt {
    let result = super.call(
      "nonceOfPartyA",
      "nonceOfPartyA(address):(uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigInt();
  }

  try_nonceOfPartyA(partyA: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nonceOfPartyA",
      "nonceOfPartyA(address):(uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nonceOfPartyB(partyB: Address, partyA: Address): BigInt {
    let result = super.call(
      "nonceOfPartyB",
      "nonceOfPartyB(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigInt();
  }

  try_nonceOfPartyB(
    partyB: Address,
    partyA: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nonceOfPartyB",
      "nonceOfPartyB(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  partyAPositionsCount(partyA: Address): BigInt {
    let result = super.call(
      "partyAPositionsCount",
      "partyAPositionsCount(address):(uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigInt();
  }

  try_partyAPositionsCount(partyA: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "partyAPositionsCount",
      "partyAPositionsCount(address):(uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  partyAStats(partyA: Address): symmio__partyAStatsResult {
    let result = super.call(
      "partyAStats",
      "partyAStats(address):(bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );

    return new symmio__partyAStatsResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toBigInt(),
      result[12].toBigInt(),
      result[13].toBigInt()
    );
  }

  try_partyAStats(
    partyA: Address
  ): ethereum.CallResult<symmio__partyAStatsResult> {
    let result = super.tryCall(
      "partyAStats",
      "partyAStats(address):(bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmio__partyAStatsResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toBigInt(),
        value[12].toBigInt(),
        value[13].toBigInt()
      )
    );
  }

  partyBLiquidationTimestamp(partyB: Address, partyA: Address): BigInt {
    let result = super.call(
      "partyBLiquidationTimestamp",
      "partyBLiquidationTimestamp(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigInt();
  }

  try_partyBLiquidationTimestamp(
    partyB: Address,
    partyA: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "partyBLiquidationTimestamp",
      "partyBLiquidationTimestamp(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  partyBPositionsCount(partyB: Address, partyA: Address): BigInt {
    let result = super.call(
      "partyBPositionsCount",
      "partyBPositionsCount(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );

    return result[0].toBigInt();
  }

  try_partyBPositionsCount(
    partyB: Address,
    partyA: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "partyBPositionsCount",
      "partyBPositionsCount(address,address):(uint256)",
      [ethereum.Value.fromAddress(partyB), ethereum.Value.fromAddress(partyA)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pauseState(): symmio__pauseStateResult {
    let result = super.call(
      "pauseState",
      "pauseState():(bool,bool,bool,bool,bool,bool)",
      []
    );

    return new symmio__pauseStateResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBoolean(),
      result[3].toBoolean(),
      result[4].toBoolean(),
      result[5].toBoolean()
    );
  }

  try_pauseState(): ethereum.CallResult<symmio__pauseStateResult> {
    let result = super.tryCall(
      "pauseState",
      "pauseState():(bool,bool,bool,bool,bool,bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmio__pauseStateResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBoolean(),
        value[3].toBoolean(),
        value[4].toBoolean(),
        value[5].toBoolean()
      )
    );
  }

  pendingQuotesValidLength(): BigInt {
    let result = super.call(
      "pendingQuotesValidLength",
      "pendingQuotesValidLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_pendingQuotesValidLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingQuotesValidLength",
      "pendingQuotesValidLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quoteIdsOf(partyA: Address, start: BigInt, size: BigInt): Array<BigInt> {
    let result = super.call(
      "quoteIdsOf",
      "quoteIdsOf(address,uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_quoteIdsOf(
    partyA: Address,
    start: BigInt,
    size: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "quoteIdsOf",
      "quoteIdsOf(address,uint256,uint256):(uint256[])",
      [
        ethereum.Value.fromAddress(partyA),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  quotesLength(user: Address): BigInt {
    let result = super.call("quotesLength", "quotesLength(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_quotesLength(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "quotesLength",
      "quotesLength(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbolNameById(symbolIds: Array<BigInt>): Array<string> {
    let result = super.call(
      "symbolNameById",
      "symbolNameById(uint256[]):(string[])",
      [ethereum.Value.fromUnsignedBigIntArray(symbolIds)]
    );

    return result[0].toStringArray();
  }

  try_symbolNameById(
    symbolIds: Array<BigInt>
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "symbolNameById",
      "symbolNameById(uint256[]):(string[])",
      [ethereum.Value.fromUnsignedBigIntArray(symbolIds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  symbolNameByQuoteId(quoteIds: Array<BigInt>): Array<string> {
    let result = super.call(
      "symbolNameByQuoteId",
      "symbolNameByQuoteId(uint256[]):(string[])",
      [ethereum.Value.fromUnsignedBigIntArray(quoteIds)]
    );

    return result[0].toStringArray();
  }

  try_symbolNameByQuoteId(
    quoteIds: Array<BigInt>
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "symbolNameByQuoteId",
      "symbolNameByQuoteId(uint256[]):(string[])",
      [ethereum.Value.fromUnsignedBigIntArray(quoteIds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  symbolsByQuoteId(
    quoteIds: Array<BigInt>
  ): Array<symmio__symbolsByQuoteIdResultValue0Struct> {
    let result = super.call(
      "symbolsByQuoteId",
      "symbolsByQuoteId(uint256[]):((uint256,string,bool,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigIntArray(quoteIds)]
    );

    return result[0].toTupleArray<symmio__symbolsByQuoteIdResultValue0Struct>();
  }

  try_symbolsByQuoteId(
    quoteIds: Array<BigInt>
  ): ethereum.CallResult<Array<symmio__symbolsByQuoteIdResultValue0Struct>> {
    let result = super.tryCall(
      "symbolsByQuoteId",
      "symbolsByQuoteId(uint256[]):((uint256,string,bool,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigIntArray(quoteIds)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmio__symbolsByQuoteIdResultValue0Struct>()
    );
  }

  withdrawCooldownOf(user: Address): BigInt {
    let result = super.call(
      "withdrawCooldownOf",
      "withdrawCooldownOf(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_withdrawCooldownOf(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "withdrawCooldownOf",
      "withdrawCooldownOf(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBasefee(): BigInt {
    let result = super.call("getBasefee", "getBasefee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBasefee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBasefee", "getBasefee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBlockHash(blockNumber: BigInt): Bytes {
    let result = super.call("getBlockHash", "getBlockHash(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(blockNumber)
    ]);

    return result[0].toBytes();
  }

  try_getBlockHash(blockNumber: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getBlockHash",
      "getBlockHash(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(blockNumber)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getBlockNumber(): BigInt {
    let result = super.call("getBlockNumber", "getBlockNumber():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBlockNumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBlockNumber",
      "getBlockNumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getChainId(): BigInt {
    let result = super.call("getChainId", "getChainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getChainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getChainId", "getChainId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentBlockCoinbase(): Address {
    let result = super.call(
      "getCurrentBlockCoinbase",
      "getCurrentBlockCoinbase():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getCurrentBlockCoinbase(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getCurrentBlockCoinbase",
      "getCurrentBlockCoinbase():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCurrentBlockDifficulty(): BigInt {
    let result = super.call(
      "getCurrentBlockDifficulty",
      "getCurrentBlockDifficulty():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentBlockDifficulty(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentBlockDifficulty",
      "getCurrentBlockDifficulty():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentBlockGasLimit(): BigInt {
    let result = super.call(
      "getCurrentBlockGasLimit",
      "getCurrentBlockGasLimit():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentBlockGasLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentBlockGasLimit",
      "getCurrentBlockGasLimit():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentBlockTimestamp(): BigInt {
    let result = super.call(
      "getCurrentBlockTimestamp",
      "getCurrentBlockTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentBlockTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentBlockTimestamp",
      "getCurrentBlockTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getEthBalance(addr: Address): BigInt {
    let result = super.call(
      "getEthBalance",
      "getEthBalance(address):(uint256)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBigInt();
  }

  try_getEthBalance(addr: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEthBalance",
      "getEthBalance(address):(uint256)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLastBlockHash(): Bytes {
    let result = super.call(
      "getLastBlockHash",
      "getLastBlockHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_getLastBlockHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getLastBlockHash",
      "getLastBlockHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ActiveEmergencyModeCall extends ethereum.Call {
  get inputs(): ActiveEmergencyModeCall__Inputs {
    return new ActiveEmergencyModeCall__Inputs(this);
  }

  get outputs(): ActiveEmergencyModeCall__Outputs {
    return new ActiveEmergencyModeCall__Outputs(this);
  }
}

export class ActiveEmergencyModeCall__Inputs {
  _call: ActiveEmergencyModeCall;

  constructor(call: ActiveEmergencyModeCall) {
    this._call = call;
  }
}

export class ActiveEmergencyModeCall__Outputs {
  _call: ActiveEmergencyModeCall;

  constructor(call: ActiveEmergencyModeCall) {
    this._call = call;
  }
}

export class AddSymbolCall extends ethereum.Call {
  get inputs(): AddSymbolCall__Inputs {
    return new AddSymbolCall__Inputs(this);
  }

  get outputs(): AddSymbolCall__Outputs {
    return new AddSymbolCall__Outputs(this);
  }
}

export class AddSymbolCall__Inputs {
  _call: AddSymbolCall;

  constructor(call: AddSymbolCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tradingFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get maxLeverage(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class AddSymbolCall__Outputs {
  _call: AddSymbolCall;

  constructor(call: AddSymbolCall) {
    this._call = call;
  }
}

export class AddSymbolsCall extends ethereum.Call {
  get inputs(): AddSymbolsCall__Inputs {
    return new AddSymbolsCall__Inputs(this);
  }

  get outputs(): AddSymbolsCall__Outputs {
    return new AddSymbolsCall__Outputs(this);
  }
}

export class AddSymbolsCall__Inputs {
  _call: AddSymbolsCall;

  constructor(call: AddSymbolsCall) {
    this._call = call;
  }

  get symbols(): Array<AddSymbolsCallSymbolsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      AddSymbolsCallSymbolsStruct
    >();
  }
}

export class AddSymbolsCall__Outputs {
  _call: AddSymbolsCall;

  constructor(call: AddSymbolsCall) {
    this._call = call;
  }
}

export class AddSymbolsCallSymbolsStruct extends ethereum.Tuple {
  get symbolId(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get isValid(): boolean {
    return this[2].toBoolean();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this[3].toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this[4].toBigInt();
  }

  get tradingFee(): BigInt {
    return this[5].toBigInt();
  }

  get maxLeverage(): BigInt {
    return this[6].toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this[7].toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this[8].toBigInt();
  }
}

export class DeactiveEmergencyModeCall extends ethereum.Call {
  get inputs(): DeactiveEmergencyModeCall__Inputs {
    return new DeactiveEmergencyModeCall__Inputs(this);
  }

  get outputs(): DeactiveEmergencyModeCall__Outputs {
    return new DeactiveEmergencyModeCall__Outputs(this);
  }
}

export class DeactiveEmergencyModeCall__Inputs {
  _call: DeactiveEmergencyModeCall;

  constructor(call: DeactiveEmergencyModeCall) {
    this._call = call;
  }
}

export class DeactiveEmergencyModeCall__Outputs {
  _call: DeactiveEmergencyModeCall;

  constructor(call: DeactiveEmergencyModeCall) {
    this._call = call;
  }
}

export class DeregisterPartyBCall extends ethereum.Call {
  get inputs(): DeregisterPartyBCall__Inputs {
    return new DeregisterPartyBCall__Inputs(this);
  }

  get outputs(): DeregisterPartyBCall__Outputs {
    return new DeregisterPartyBCall__Outputs(this);
  }
}

export class DeregisterPartyBCall__Inputs {
  _call: DeregisterPartyBCall;

  constructor(call: DeregisterPartyBCall) {
    this._call = call;
  }

  get partyB(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeregisterPartyBCall__Outputs {
  _call: DeregisterPartyBCall;

  constructor(call: DeregisterPartyBCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get role(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get collateral(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get feeCollector(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class PauseAccountingCall extends ethereum.Call {
  get inputs(): PauseAccountingCall__Inputs {
    return new PauseAccountingCall__Inputs(this);
  }

  get outputs(): PauseAccountingCall__Outputs {
    return new PauseAccountingCall__Outputs(this);
  }
}

export class PauseAccountingCall__Inputs {
  _call: PauseAccountingCall;

  constructor(call: PauseAccountingCall) {
    this._call = call;
  }
}

export class PauseAccountingCall__Outputs {
  _call: PauseAccountingCall;

  constructor(call: PauseAccountingCall) {
    this._call = call;
  }
}

export class PauseGlobalCall extends ethereum.Call {
  get inputs(): PauseGlobalCall__Inputs {
    return new PauseGlobalCall__Inputs(this);
  }

  get outputs(): PauseGlobalCall__Outputs {
    return new PauseGlobalCall__Outputs(this);
  }
}

export class PauseGlobalCall__Inputs {
  _call: PauseGlobalCall;

  constructor(call: PauseGlobalCall) {
    this._call = call;
  }
}

export class PauseGlobalCall__Outputs {
  _call: PauseGlobalCall;

  constructor(call: PauseGlobalCall) {
    this._call = call;
  }
}

export class PauseLiquidationCall extends ethereum.Call {
  get inputs(): PauseLiquidationCall__Inputs {
    return new PauseLiquidationCall__Inputs(this);
  }

  get outputs(): PauseLiquidationCall__Outputs {
    return new PauseLiquidationCall__Outputs(this);
  }
}

export class PauseLiquidationCall__Inputs {
  _call: PauseLiquidationCall;

  constructor(call: PauseLiquidationCall) {
    this._call = call;
  }
}

export class PauseLiquidationCall__Outputs {
  _call: PauseLiquidationCall;

  constructor(call: PauseLiquidationCall) {
    this._call = call;
  }
}

export class PausePartyAActionsCall extends ethereum.Call {
  get inputs(): PausePartyAActionsCall__Inputs {
    return new PausePartyAActionsCall__Inputs(this);
  }

  get outputs(): PausePartyAActionsCall__Outputs {
    return new PausePartyAActionsCall__Outputs(this);
  }
}

export class PausePartyAActionsCall__Inputs {
  _call: PausePartyAActionsCall;

  constructor(call: PausePartyAActionsCall) {
    this._call = call;
  }
}

export class PausePartyAActionsCall__Outputs {
  _call: PausePartyAActionsCall;

  constructor(call: PausePartyAActionsCall) {
    this._call = call;
  }
}

export class PausePartyBActionsCall extends ethereum.Call {
  get inputs(): PausePartyBActionsCall__Inputs {
    return new PausePartyBActionsCall__Inputs(this);
  }

  get outputs(): PausePartyBActionsCall__Outputs {
    return new PausePartyBActionsCall__Outputs(this);
  }
}

export class PausePartyBActionsCall__Inputs {
  _call: PausePartyBActionsCall;

  constructor(call: PausePartyBActionsCall) {
    this._call = call;
  }
}

export class PausePartyBActionsCall__Outputs {
  _call: PausePartyBActionsCall;

  constructor(call: PausePartyBActionsCall) {
    this._call = call;
  }
}

export class RegisterPartyBCall extends ethereum.Call {
  get inputs(): RegisterPartyBCall__Inputs {
    return new RegisterPartyBCall__Inputs(this);
  }

  get outputs(): RegisterPartyBCall__Outputs {
    return new RegisterPartyBCall__Outputs(this);
  }
}

export class RegisterPartyBCall__Inputs {
  _call: RegisterPartyBCall;

  constructor(call: RegisterPartyBCall) {
    this._call = call;
  }

  get partyB(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterPartyBCall__Outputs {
  _call: RegisterPartyBCall;

  constructor(call: RegisterPartyBCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get role(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAdminCall extends ethereum.Call {
  get inputs(): SetAdminCall__Inputs {
    return new SetAdminCall__Inputs(this);
  }

  get outputs(): SetAdminCall__Outputs {
    return new SetAdminCall__Outputs(this);
  }
}

export class SetAdminCall__Inputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAdminCall__Outputs {
  _call: SetAdminCall;

  constructor(call: SetAdminCall) {
    this._call = call;
  }
}

export class SetBalanceLimitPerUserCall extends ethereum.Call {
  get inputs(): SetBalanceLimitPerUserCall__Inputs {
    return new SetBalanceLimitPerUserCall__Inputs(this);
  }

  get outputs(): SetBalanceLimitPerUserCall__Outputs {
    return new SetBalanceLimitPerUserCall__Outputs(this);
  }
}

export class SetBalanceLimitPerUserCall__Inputs {
  _call: SetBalanceLimitPerUserCall;

  constructor(call: SetBalanceLimitPerUserCall) {
    this._call = call;
  }

  get balanceLimitPerUser(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBalanceLimitPerUserCall__Outputs {
  _call: SetBalanceLimitPerUserCall;

  constructor(call: SetBalanceLimitPerUserCall) {
    this._call = call;
  }
}

export class SetCollateralCall extends ethereum.Call {
  get inputs(): SetCollateralCall__Inputs {
    return new SetCollateralCall__Inputs(this);
  }

  get outputs(): SetCollateralCall__Outputs {
    return new SetCollateralCall__Outputs(this);
  }
}

export class SetCollateralCall__Inputs {
  _call: SetCollateralCall;

  constructor(call: SetCollateralCall) {
    this._call = call;
  }

  get collateral(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCollateralCall__Outputs {
  _call: SetCollateralCall;

  constructor(call: SetCollateralCall) {
    this._call = call;
  }
}

export class SetDeallocateCooldownCall extends ethereum.Call {
  get inputs(): SetDeallocateCooldownCall__Inputs {
    return new SetDeallocateCooldownCall__Inputs(this);
  }

  get outputs(): SetDeallocateCooldownCall__Outputs {
    return new SetDeallocateCooldownCall__Outputs(this);
  }
}

export class SetDeallocateCooldownCall__Inputs {
  _call: SetDeallocateCooldownCall;

  constructor(call: SetDeallocateCooldownCall) {
    this._call = call;
  }

  get deallocateCooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDeallocateCooldownCall__Outputs {
  _call: SetDeallocateCooldownCall;

  constructor(call: SetDeallocateCooldownCall) {
    this._call = call;
  }
}

export class SetFeeCollectorCall extends ethereum.Call {
  get inputs(): SetFeeCollectorCall__Inputs {
    return new SetFeeCollectorCall__Inputs(this);
  }

  get outputs(): SetFeeCollectorCall__Outputs {
    return new SetFeeCollectorCall__Outputs(this);
  }
}

export class SetFeeCollectorCall__Inputs {
  _call: SetFeeCollectorCall;

  constructor(call: SetFeeCollectorCall) {
    this._call = call;
  }

  get feeCollector(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeCollectorCall__Outputs {
  _call: SetFeeCollectorCall;

  constructor(call: SetFeeCollectorCall) {
    this._call = call;
  }
}

export class SetForceCancelCloseCooldownCall extends ethereum.Call {
  get inputs(): SetForceCancelCloseCooldownCall__Inputs {
    return new SetForceCancelCloseCooldownCall__Inputs(this);
  }

  get outputs(): SetForceCancelCloseCooldownCall__Outputs {
    return new SetForceCancelCloseCooldownCall__Outputs(this);
  }
}

export class SetForceCancelCloseCooldownCall__Inputs {
  _call: SetForceCancelCloseCooldownCall;

  constructor(call: SetForceCancelCloseCooldownCall) {
    this._call = call;
  }

  get forceCancelCloseCooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetForceCancelCloseCooldownCall__Outputs {
  _call: SetForceCancelCloseCooldownCall;

  constructor(call: SetForceCancelCloseCooldownCall) {
    this._call = call;
  }
}

export class SetForceCancelCooldownCall extends ethereum.Call {
  get inputs(): SetForceCancelCooldownCall__Inputs {
    return new SetForceCancelCooldownCall__Inputs(this);
  }

  get outputs(): SetForceCancelCooldownCall__Outputs {
    return new SetForceCancelCooldownCall__Outputs(this);
  }
}

export class SetForceCancelCooldownCall__Inputs {
  _call: SetForceCancelCooldownCall;

  constructor(call: SetForceCancelCooldownCall) {
    this._call = call;
  }

  get forceCancelCooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetForceCancelCooldownCall__Outputs {
  _call: SetForceCancelCooldownCall;

  constructor(call: SetForceCancelCooldownCall) {
    this._call = call;
  }
}

export class SetForceCloseCooldownCall extends ethereum.Call {
  get inputs(): SetForceCloseCooldownCall__Inputs {
    return new SetForceCloseCooldownCall__Inputs(this);
  }

  get outputs(): SetForceCloseCooldownCall__Outputs {
    return new SetForceCloseCooldownCall__Outputs(this);
  }
}

export class SetForceCloseCooldownCall__Inputs {
  _call: SetForceCloseCooldownCall;

  constructor(call: SetForceCloseCooldownCall) {
    this._call = call;
  }

  get forceCloseCooldown(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetForceCloseCooldownCall__Outputs {
  _call: SetForceCloseCooldownCall;

  constructor(call: SetForceCloseCooldownCall) {
    this._call = call;
  }
}

export class SetForceCloseGapRatioCall extends ethereum.Call {
  get inputs(): SetForceCloseGapRatioCall__Inputs {
    return new SetForceCloseGapRatioCall__Inputs(this);
  }

  get outputs(): SetForceCloseGapRatioCall__Outputs {
    return new SetForceCloseGapRatioCall__Outputs(this);
  }
}

export class SetForceCloseGapRatioCall__Inputs {
  _call: SetForceCloseGapRatioCall;

  constructor(call: SetForceCloseGapRatioCall) {
    this._call = call;
  }

  get forceCloseGapRatio(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetForceCloseGapRatioCall__Outputs {
  _call: SetForceCloseGapRatioCall;

  constructor(call: SetForceCloseGapRatioCall) {
    this._call = call;
  }
}

export class SetLiquidationTimeoutCall extends ethereum.Call {
  get inputs(): SetLiquidationTimeoutCall__Inputs {
    return new SetLiquidationTimeoutCall__Inputs(this);
  }

  get outputs(): SetLiquidationTimeoutCall__Outputs {
    return new SetLiquidationTimeoutCall__Outputs(this);
  }
}

export class SetLiquidationTimeoutCall__Inputs {
  _call: SetLiquidationTimeoutCall;

  constructor(call: SetLiquidationTimeoutCall) {
    this._call = call;
  }

  get liquidationTimeout(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLiquidationTimeoutCall__Outputs {
  _call: SetLiquidationTimeoutCall;

  constructor(call: SetLiquidationTimeoutCall) {
    this._call = call;
  }
}

export class SetLiquidatorShareCall extends ethereum.Call {
  get inputs(): SetLiquidatorShareCall__Inputs {
    return new SetLiquidatorShareCall__Inputs(this);
  }

  get outputs(): SetLiquidatorShareCall__Outputs {
    return new SetLiquidatorShareCall__Outputs(this);
  }
}

export class SetLiquidatorShareCall__Inputs {
  _call: SetLiquidatorShareCall;

  constructor(call: SetLiquidatorShareCall) {
    this._call = call;
  }

  get liquidatorShare(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetLiquidatorShareCall__Outputs {
  _call: SetLiquidatorShareCall;

  constructor(call: SetLiquidatorShareCall) {
    this._call = call;
  }
}

export class SetMuonConfigCall extends ethereum.Call {
  get inputs(): SetMuonConfigCall__Inputs {
    return new SetMuonConfigCall__Inputs(this);
  }

  get outputs(): SetMuonConfigCall__Outputs {
    return new SetMuonConfigCall__Outputs(this);
  }
}

export class SetMuonConfigCall__Inputs {
  _call: SetMuonConfigCall;

  constructor(call: SetMuonConfigCall) {
    this._call = call;
  }

  get upnlValidTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get priceValidTime(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get priceQuantityValidTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetMuonConfigCall__Outputs {
  _call: SetMuonConfigCall;

  constructor(call: SetMuonConfigCall) {
    this._call = call;
  }
}

export class SetMuonIdsCall extends ethereum.Call {
  get inputs(): SetMuonIdsCall__Inputs {
    return new SetMuonIdsCall__Inputs(this);
  }

  get outputs(): SetMuonIdsCall__Outputs {
    return new SetMuonIdsCall__Outputs(this);
  }
}

export class SetMuonIdsCall__Inputs {
  _call: SetMuonIdsCall;

  constructor(call: SetMuonIdsCall) {
    this._call = call;
  }

  get muonAppId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get validGateway(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get publicKey(): SetMuonIdsCallPublicKeyStruct {
    return changetype<SetMuonIdsCallPublicKeyStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class SetMuonIdsCall__Outputs {
  _call: SetMuonIdsCall;

  constructor(call: SetMuonIdsCall) {
    this._call = call;
  }
}

export class SetMuonIdsCallPublicKeyStruct extends ethereum.Tuple {
  get x(): BigInt {
    return this[0].toBigInt();
  }

  get parity(): i32 {
    return this[1].toI32();
  }
}

export class SetPartyBEmergencyStatusCall extends ethereum.Call {
  get inputs(): SetPartyBEmergencyStatusCall__Inputs {
    return new SetPartyBEmergencyStatusCall__Inputs(this);
  }

  get outputs(): SetPartyBEmergencyStatusCall__Outputs {
    return new SetPartyBEmergencyStatusCall__Outputs(this);
  }
}

export class SetPartyBEmergencyStatusCall__Inputs {
  _call: SetPartyBEmergencyStatusCall;

  constructor(call: SetPartyBEmergencyStatusCall) {
    this._call = call;
  }

  get partyBs(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPartyBEmergencyStatusCall__Outputs {
  _call: SetPartyBEmergencyStatusCall;

  constructor(call: SetPartyBEmergencyStatusCall) {
    this._call = call;
  }
}

export class SetPendingQuotesValidLengthCall extends ethereum.Call {
  get inputs(): SetPendingQuotesValidLengthCall__Inputs {
    return new SetPendingQuotesValidLengthCall__Inputs(this);
  }

  get outputs(): SetPendingQuotesValidLengthCall__Outputs {
    return new SetPendingQuotesValidLengthCall__Outputs(this);
  }
}

export class SetPendingQuotesValidLengthCall__Inputs {
  _call: SetPendingQuotesValidLengthCall;

  constructor(call: SetPendingQuotesValidLengthCall) {
    this._call = call;
  }

  get pendingQuotesValidLength(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPendingQuotesValidLengthCall__Outputs {
  _call: SetPendingQuotesValidLengthCall;

  constructor(call: SetPendingQuotesValidLengthCall) {
    this._call = call;
  }
}

export class SetSymbolAcceptableValuesCall extends ethereum.Call {
  get inputs(): SetSymbolAcceptableValuesCall__Inputs {
    return new SetSymbolAcceptableValuesCall__Inputs(this);
  }

  get outputs(): SetSymbolAcceptableValuesCall__Outputs {
    return new SetSymbolAcceptableValuesCall__Outputs(this);
  }
}

export class SetSymbolAcceptableValuesCall__Inputs {
  _call: SetSymbolAcceptableValuesCall;

  constructor(call: SetSymbolAcceptableValuesCall) {
    this._call = call;
  }

  get symbolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get minAcceptableQuoteValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get minAcceptablePortionLF(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetSymbolAcceptableValuesCall__Outputs {
  _call: SetSymbolAcceptableValuesCall;

  constructor(call: SetSymbolAcceptableValuesCall) {
    this._call = call;
  }
}

export class SetSymbolFundingStateCall extends ethereum.Call {
  get inputs(): SetSymbolFundingStateCall__Inputs {
    return new SetSymbolFundingStateCall__Inputs(this);
  }

  get outputs(): SetSymbolFundingStateCall__Outputs {
    return new SetSymbolFundingStateCall__Outputs(this);
  }
}

export class SetSymbolFundingStateCall__Inputs {
  _call: SetSymbolFundingStateCall;

  constructor(call: SetSymbolFundingStateCall) {
    this._call = call;
  }

  get symbolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get fundingRateEpochDuration(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get fundingRateWindowTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetSymbolFundingStateCall__Outputs {
  _call: SetSymbolFundingStateCall;

  constructor(call: SetSymbolFundingStateCall) {
    this._call = call;
  }
}

export class SetSymbolMaxLeverageCall extends ethereum.Call {
  get inputs(): SetSymbolMaxLeverageCall__Inputs {
    return new SetSymbolMaxLeverageCall__Inputs(this);
  }

  get outputs(): SetSymbolMaxLeverageCall__Outputs {
    return new SetSymbolMaxLeverageCall__Outputs(this);
  }
}

export class SetSymbolMaxLeverageCall__Inputs {
  _call: SetSymbolMaxLeverageCall;

  constructor(call: SetSymbolMaxLeverageCall) {
    this._call = call;
  }

  get symbolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get maxLeverage(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetSymbolMaxLeverageCall__Outputs {
  _call: SetSymbolMaxLeverageCall;

  constructor(call: SetSymbolMaxLeverageCall) {
    this._call = call;
  }
}

export class SetSymbolTradingFeeCall extends ethereum.Call {
  get inputs(): SetSymbolTradingFeeCall__Inputs {
    return new SetSymbolTradingFeeCall__Inputs(this);
  }

  get outputs(): SetSymbolTradingFeeCall__Outputs {
    return new SetSymbolTradingFeeCall__Outputs(this);
  }
}

export class SetSymbolTradingFeeCall__Inputs {
  _call: SetSymbolTradingFeeCall;

  constructor(call: SetSymbolTradingFeeCall) {
    this._call = call;
  }

  get symbolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tradingFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetSymbolTradingFeeCall__Outputs {
  _call: SetSymbolTradingFeeCall;

  constructor(call: SetSymbolTradingFeeCall) {
    this._call = call;
  }
}

export class SetSymbolValidationStateCall extends ethereum.Call {
  get inputs(): SetSymbolValidationStateCall__Inputs {
    return new SetSymbolValidationStateCall__Inputs(this);
  }

  get outputs(): SetSymbolValidationStateCall__Outputs {
    return new SetSymbolValidationStateCall__Outputs(this);
  }
}

export class SetSymbolValidationStateCall__Inputs {
  _call: SetSymbolValidationStateCall;

  constructor(call: SetSymbolValidationStateCall) {
    this._call = call;
  }

  get symbolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isValid(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetSymbolValidationStateCall__Outputs {
  _call: SetSymbolValidationStateCall;

  constructor(call: SetSymbolValidationStateCall) {
    this._call = call;
  }
}

export class SuspendedAddressCall extends ethereum.Call {
  get inputs(): SuspendedAddressCall__Inputs {
    return new SuspendedAddressCall__Inputs(this);
  }

  get outputs(): SuspendedAddressCall__Outputs {
    return new SuspendedAddressCall__Outputs(this);
  }
}

export class SuspendedAddressCall__Inputs {
  _call: SuspendedAddressCall;

  constructor(call: SuspendedAddressCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SuspendedAddressCall__Outputs {
  _call: SuspendedAddressCall;

  constructor(call: SuspendedAddressCall) {
    this._call = call;
  }
}

export class UnpauseAccountingCall extends ethereum.Call {
  get inputs(): UnpauseAccountingCall__Inputs {
    return new UnpauseAccountingCall__Inputs(this);
  }

  get outputs(): UnpauseAccountingCall__Outputs {
    return new UnpauseAccountingCall__Outputs(this);
  }
}

export class UnpauseAccountingCall__Inputs {
  _call: UnpauseAccountingCall;

  constructor(call: UnpauseAccountingCall) {
    this._call = call;
  }
}

export class UnpauseAccountingCall__Outputs {
  _call: UnpauseAccountingCall;

  constructor(call: UnpauseAccountingCall) {
    this._call = call;
  }
}

export class UnpauseGlobalCall extends ethereum.Call {
  get inputs(): UnpauseGlobalCall__Inputs {
    return new UnpauseGlobalCall__Inputs(this);
  }

  get outputs(): UnpauseGlobalCall__Outputs {
    return new UnpauseGlobalCall__Outputs(this);
  }
}

export class UnpauseGlobalCall__Inputs {
  _call: UnpauseGlobalCall;

  constructor(call: UnpauseGlobalCall) {
    this._call = call;
  }
}

export class UnpauseGlobalCall__Outputs {
  _call: UnpauseGlobalCall;

  constructor(call: UnpauseGlobalCall) {
    this._call = call;
  }
}

export class UnpauseLiquidationCall extends ethereum.Call {
  get inputs(): UnpauseLiquidationCall__Inputs {
    return new UnpauseLiquidationCall__Inputs(this);
  }

  get outputs(): UnpauseLiquidationCall__Outputs {
    return new UnpauseLiquidationCall__Outputs(this);
  }
}

export class UnpauseLiquidationCall__Inputs {
  _call: UnpauseLiquidationCall;

  constructor(call: UnpauseLiquidationCall) {
    this._call = call;
  }
}

export class UnpauseLiquidationCall__Outputs {
  _call: UnpauseLiquidationCall;

  constructor(call: UnpauseLiquidationCall) {
    this._call = call;
  }
}

export class UnpausePartyAActionsCall extends ethereum.Call {
  get inputs(): UnpausePartyAActionsCall__Inputs {
    return new UnpausePartyAActionsCall__Inputs(this);
  }

  get outputs(): UnpausePartyAActionsCall__Outputs {
    return new UnpausePartyAActionsCall__Outputs(this);
  }
}

export class UnpausePartyAActionsCall__Inputs {
  _call: UnpausePartyAActionsCall;

  constructor(call: UnpausePartyAActionsCall) {
    this._call = call;
  }
}

export class UnpausePartyAActionsCall__Outputs {
  _call: UnpausePartyAActionsCall;

  constructor(call: UnpausePartyAActionsCall) {
    this._call = call;
  }
}

export class UnpausePartyBActionsCall extends ethereum.Call {
  get inputs(): UnpausePartyBActionsCall__Inputs {
    return new UnpausePartyBActionsCall__Inputs(this);
  }

  get outputs(): UnpausePartyBActionsCall__Outputs {
    return new UnpausePartyBActionsCall__Outputs(this);
  }
}

export class UnpausePartyBActionsCall__Inputs {
  _call: UnpausePartyBActionsCall;

  constructor(call: UnpausePartyBActionsCall) {
    this._call = call;
  }
}

export class UnpausePartyBActionsCall__Outputs {
  _call: UnpausePartyBActionsCall;

  constructor(call: UnpausePartyBActionsCall) {
    this._call = call;
  }
}

export class UnsuspendedAddressCall extends ethereum.Call {
  get inputs(): UnsuspendedAddressCall__Inputs {
    return new UnsuspendedAddressCall__Inputs(this);
  }

  get outputs(): UnsuspendedAddressCall__Outputs {
    return new UnsuspendedAddressCall__Outputs(this);
  }
}

export class UnsuspendedAddressCall__Inputs {
  _call: UnsuspendedAddressCall;

  constructor(call: UnsuspendedAddressCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnsuspendedAddressCall__Outputs {
  _call: UnsuspendedAddressCall;

  constructor(call: UnsuspendedAddressCall) {
    this._call = call;
  }
}

export class LiquidatePartyACall extends ethereum.Call {
  get inputs(): LiquidatePartyACall__Inputs {
    return new LiquidatePartyACall__Inputs(this);
  }

  get outputs(): LiquidatePartyACall__Outputs {
    return new LiquidatePartyACall__Outputs(this);
  }
}

export class LiquidatePartyACall__Inputs {
  _call: LiquidatePartyACall;

  constructor(call: LiquidatePartyACall) {
    this._call = call;
  }

  get partyA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get liquidationSig(): LiquidatePartyACallLiquidationSigStruct {
    return changetype<LiquidatePartyACallLiquidationSigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class LiquidatePartyACall__Outputs {
  _call: LiquidatePartyACall;

  constructor(call: LiquidatePartyACall) {
    this._call = call;
  }
}

export class LiquidatePartyACallLiquidationSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get liquidationId(): Bytes {
    return this[2].toBytes();
  }

  get upnl(): BigInt {
    return this[3].toBigInt();
  }

  get totalUnrealizedLoss(): BigInt {
    return this[4].toBigInt();
  }

  get symbolIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get gatewaySignature(): Bytes {
    return this[7].toBytes();
  }

  get sigs(): LiquidatePartyACallLiquidationSigSigsStruct {
    return changetype<LiquidatePartyACallLiquidationSigSigsStruct>(
      this[8].toTuple()
    );
  }
}

export class LiquidatePartyACallLiquidationSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class LiquidatePartyBCall extends ethereum.Call {
  get inputs(): LiquidatePartyBCall__Inputs {
    return new LiquidatePartyBCall__Inputs(this);
  }

  get outputs(): LiquidatePartyBCall__Outputs {
    return new LiquidatePartyBCall__Outputs(this);
  }
}

export class LiquidatePartyBCall__Inputs {
  _call: LiquidatePartyBCall;

  constructor(call: LiquidatePartyBCall) {
    this._call = call;
  }

  get partyB(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get partyA(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get upnlSig(): LiquidatePartyBCallUpnlSigStruct {
    return changetype<LiquidatePartyBCallUpnlSigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class LiquidatePartyBCall__Outputs {
  _call: LiquidatePartyBCall;

  constructor(call: LiquidatePartyBCall) {
    this._call = call;
  }
}

export class LiquidatePartyBCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[3].toBytes();
  }

  get sigs(): LiquidatePartyBCallUpnlSigSigsStruct {
    return changetype<LiquidatePartyBCallUpnlSigSigsStruct>(this[4].toTuple());
  }
}

export class LiquidatePartyBCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class LiquidatePendingPositionsPartyACall extends ethereum.Call {
  get inputs(): LiquidatePendingPositionsPartyACall__Inputs {
    return new LiquidatePendingPositionsPartyACall__Inputs(this);
  }

  get outputs(): LiquidatePendingPositionsPartyACall__Outputs {
    return new LiquidatePendingPositionsPartyACall__Outputs(this);
  }
}

export class LiquidatePendingPositionsPartyACall__Inputs {
  _call: LiquidatePendingPositionsPartyACall;

  constructor(call: LiquidatePendingPositionsPartyACall) {
    this._call = call;
  }

  get partyA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class LiquidatePendingPositionsPartyACall__Outputs {
  _call: LiquidatePendingPositionsPartyACall;

  constructor(call: LiquidatePendingPositionsPartyACall) {
    this._call = call;
  }
}

export class LiquidatePositionsPartyACall extends ethereum.Call {
  get inputs(): LiquidatePositionsPartyACall__Inputs {
    return new LiquidatePositionsPartyACall__Inputs(this);
  }

  get outputs(): LiquidatePositionsPartyACall__Outputs {
    return new LiquidatePositionsPartyACall__Outputs(this);
  }
}

export class LiquidatePositionsPartyACall__Inputs {
  _call: LiquidatePositionsPartyACall;

  constructor(call: LiquidatePositionsPartyACall) {
    this._call = call;
  }

  get partyA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get quoteIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class LiquidatePositionsPartyACall__Outputs {
  _call: LiquidatePositionsPartyACall;

  constructor(call: LiquidatePositionsPartyACall) {
    this._call = call;
  }
}

export class LiquidatePositionsPartyBCall extends ethereum.Call {
  get inputs(): LiquidatePositionsPartyBCall__Inputs {
    return new LiquidatePositionsPartyBCall__Inputs(this);
  }

  get outputs(): LiquidatePositionsPartyBCall__Outputs {
    return new LiquidatePositionsPartyBCall__Outputs(this);
  }
}

export class LiquidatePositionsPartyBCall__Inputs {
  _call: LiquidatePositionsPartyBCall;

  constructor(call: LiquidatePositionsPartyBCall) {
    this._call = call;
  }

  get partyB(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get partyA(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get priceSig(): LiquidatePositionsPartyBCallPriceSigStruct {
    return changetype<LiquidatePositionsPartyBCallPriceSigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class LiquidatePositionsPartyBCall__Outputs {
  _call: LiquidatePositionsPartyBCall;

  constructor(call: LiquidatePositionsPartyBCall) {
    this._call = call;
  }
}

export class LiquidatePositionsPartyBCallPriceSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get quoteIds(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get gatewaySignature(): Bytes {
    return this[4].toBytes();
  }

  get sigs(): LiquidatePositionsPartyBCallPriceSigSigsStruct {
    return changetype<LiquidatePositionsPartyBCallPriceSigSigsStruct>(
      this[5].toTuple()
    );
  }
}

export class LiquidatePositionsPartyBCallPriceSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class ResolveLiquidationDisputeCall extends ethereum.Call {
  get inputs(): ResolveLiquidationDisputeCall__Inputs {
    return new ResolveLiquidationDisputeCall__Inputs(this);
  }

  get outputs(): ResolveLiquidationDisputeCall__Outputs {
    return new ResolveLiquidationDisputeCall__Outputs(this);
  }
}

export class ResolveLiquidationDisputeCall__Inputs {
  _call: ResolveLiquidationDisputeCall;

  constructor(call: ResolveLiquidationDisputeCall) {
    this._call = call;
  }

  get partyA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get partyBs(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get disputed(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class ResolveLiquidationDisputeCall__Outputs {
  _call: ResolveLiquidationDisputeCall;

  constructor(call: ResolveLiquidationDisputeCall) {
    this._call = call;
  }
}

export class SetSymbolsPriceCall extends ethereum.Call {
  get inputs(): SetSymbolsPriceCall__Inputs {
    return new SetSymbolsPriceCall__Inputs(this);
  }

  get outputs(): SetSymbolsPriceCall__Outputs {
    return new SetSymbolsPriceCall__Outputs(this);
  }
}

export class SetSymbolsPriceCall__Inputs {
  _call: SetSymbolsPriceCall;

  constructor(call: SetSymbolsPriceCall) {
    this._call = call;
  }

  get partyA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get liquidationSig(): SetSymbolsPriceCallLiquidationSigStruct {
    return changetype<SetSymbolsPriceCallLiquidationSigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetSymbolsPriceCall__Outputs {
  _call: SetSymbolsPriceCall;

  constructor(call: SetSymbolsPriceCall) {
    this._call = call;
  }
}

export class SetSymbolsPriceCallLiquidationSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get liquidationId(): Bytes {
    return this[2].toBytes();
  }

  get upnl(): BigInt {
    return this[3].toBigInt();
  }

  get totalUnrealizedLoss(): BigInt {
    return this[4].toBigInt();
  }

  get symbolIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get prices(): Array<BigInt> {
    return this[6].toBigIntArray();
  }

  get gatewaySignature(): Bytes {
    return this[7].toBytes();
  }

  get sigs(): SetSymbolsPriceCallLiquidationSigSigsStruct {
    return changetype<SetSymbolsPriceCallLiquidationSigSigsStruct>(
      this[8].toTuple()
    );
  }
}

export class SetSymbolsPriceCallLiquidationSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class SettlePartyALiquidationCall extends ethereum.Call {
  get inputs(): SettlePartyALiquidationCall__Inputs {
    return new SettlePartyALiquidationCall__Inputs(this);
  }

  get outputs(): SettlePartyALiquidationCall__Outputs {
    return new SettlePartyALiquidationCall__Outputs(this);
  }
}

export class SettlePartyALiquidationCall__Inputs {
  _call: SettlePartyALiquidationCall;

  constructor(call: SettlePartyALiquidationCall) {
    this._call = call;
  }

  get partyA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get partyBs(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class SettlePartyALiquidationCall__Outputs {
  _call: SettlePartyALiquidationCall;

  constructor(call: SettlePartyALiquidationCall) {
    this._call = call;
  }
}

export class ExpireQuoteCall extends ethereum.Call {
  get inputs(): ExpireQuoteCall__Inputs {
    return new ExpireQuoteCall__Inputs(this);
  }

  get outputs(): ExpireQuoteCall__Outputs {
    return new ExpireQuoteCall__Outputs(this);
  }
}

export class ExpireQuoteCall__Inputs {
  _call: ExpireQuoteCall;

  constructor(call: ExpireQuoteCall) {
    this._call = call;
  }

  get expiredQuoteIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ExpireQuoteCall__Outputs {
  _call: ExpireQuoteCall;

  constructor(call: ExpireQuoteCall) {
    this._call = call;
  }
}

export class ForceCancelCloseRequestCall extends ethereum.Call {
  get inputs(): ForceCancelCloseRequestCall__Inputs {
    return new ForceCancelCloseRequestCall__Inputs(this);
  }

  get outputs(): ForceCancelCloseRequestCall__Outputs {
    return new ForceCancelCloseRequestCall__Outputs(this);
  }
}

export class ForceCancelCloseRequestCall__Inputs {
  _call: ForceCancelCloseRequestCall;

  constructor(call: ForceCancelCloseRequestCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ForceCancelCloseRequestCall__Outputs {
  _call: ForceCancelCloseRequestCall;

  constructor(call: ForceCancelCloseRequestCall) {
    this._call = call;
  }
}

export class ForceCancelQuoteCall extends ethereum.Call {
  get inputs(): ForceCancelQuoteCall__Inputs {
    return new ForceCancelQuoteCall__Inputs(this);
  }

  get outputs(): ForceCancelQuoteCall__Outputs {
    return new ForceCancelQuoteCall__Outputs(this);
  }
}

export class ForceCancelQuoteCall__Inputs {
  _call: ForceCancelQuoteCall;

  constructor(call: ForceCancelQuoteCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ForceCancelQuoteCall__Outputs {
  _call: ForceCancelQuoteCall;

  constructor(call: ForceCancelQuoteCall) {
    this._call = call;
  }
}

export class ForceClosePositionCall extends ethereum.Call {
  get inputs(): ForceClosePositionCall__Inputs {
    return new ForceClosePositionCall__Inputs(this);
  }

  get outputs(): ForceClosePositionCall__Outputs {
    return new ForceClosePositionCall__Outputs(this);
  }
}

export class ForceClosePositionCall__Inputs {
  _call: ForceClosePositionCall;

  constructor(call: ForceClosePositionCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get upnlSig(): ForceClosePositionCallUpnlSigStruct {
    return changetype<ForceClosePositionCallUpnlSigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class ForceClosePositionCall__Outputs {
  _call: ForceClosePositionCall;

  constructor(call: ForceClosePositionCall) {
    this._call = call;
  }
}

export class ForceClosePositionCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnlPartyA(): BigInt {
    return this[2].toBigInt();
  }

  get upnlPartyB(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[5].toBytes();
  }

  get sigs(): ForceClosePositionCallUpnlSigSigsStruct {
    return changetype<ForceClosePositionCallUpnlSigSigsStruct>(
      this[6].toTuple()
    );
  }
}

export class ForceClosePositionCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class RequestToCancelCloseRequestCall extends ethereum.Call {
  get inputs(): RequestToCancelCloseRequestCall__Inputs {
    return new RequestToCancelCloseRequestCall__Inputs(this);
  }

  get outputs(): RequestToCancelCloseRequestCall__Outputs {
    return new RequestToCancelCloseRequestCall__Outputs(this);
  }
}

export class RequestToCancelCloseRequestCall__Inputs {
  _call: RequestToCancelCloseRequestCall;

  constructor(call: RequestToCancelCloseRequestCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestToCancelCloseRequestCall__Outputs {
  _call: RequestToCancelCloseRequestCall;

  constructor(call: RequestToCancelCloseRequestCall) {
    this._call = call;
  }
}

export class RequestToCancelQuoteCall extends ethereum.Call {
  get inputs(): RequestToCancelQuoteCall__Inputs {
    return new RequestToCancelQuoteCall__Inputs(this);
  }

  get outputs(): RequestToCancelQuoteCall__Outputs {
    return new RequestToCancelQuoteCall__Outputs(this);
  }
}

export class RequestToCancelQuoteCall__Inputs {
  _call: RequestToCancelQuoteCall;

  constructor(call: RequestToCancelQuoteCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestToCancelQuoteCall__Outputs {
  _call: RequestToCancelQuoteCall;

  constructor(call: RequestToCancelQuoteCall) {
    this._call = call;
  }
}

export class RequestToClosePositionCall extends ethereum.Call {
  get inputs(): RequestToClosePositionCall__Inputs {
    return new RequestToClosePositionCall__Inputs(this);
  }

  get outputs(): RequestToClosePositionCall__Outputs {
    return new RequestToClosePositionCall__Outputs(this);
  }
}

export class RequestToClosePositionCall__Inputs {
  _call: RequestToClosePositionCall;

  constructor(call: RequestToClosePositionCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get closePrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get quantityToClose(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get orderType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class RequestToClosePositionCall__Outputs {
  _call: RequestToClosePositionCall;

  constructor(call: RequestToClosePositionCall) {
    this._call = call;
  }
}

export class SendQuoteCall extends ethereum.Call {
  get inputs(): SendQuoteCall__Inputs {
    return new SendQuoteCall__Inputs(this);
  }

  get outputs(): SendQuoteCall__Outputs {
    return new SendQuoteCall__Outputs(this);
  }
}

export class SendQuoteCall__Inputs {
  _call: SendQuoteCall;

  constructor(call: SendQuoteCall) {
    this._call = call;
  }

  get partyBsWhiteList(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get symbolId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get positionType(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get orderType(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get quantity(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get cva(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get lf(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get partyAmm(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get partyBmm(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }

  get maxFundingRate(): BigInt {
    return this._call.inputValues[10].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[11].value.toBigInt();
  }

  get upnlSig(): SendQuoteCallUpnlSigStruct {
    return changetype<SendQuoteCallUpnlSigStruct>(
      this._call.inputValues[12].value.toTuple()
    );
  }
}

export class SendQuoteCall__Outputs {
  _call: SendQuoteCall;

  constructor(call: SendQuoteCall) {
    this._call = call;
  }
}

export class SendQuoteCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[4].toBytes();
  }

  get sigs(): SendQuoteCallUpnlSigSigsStruct {
    return changetype<SendQuoteCallUpnlSigSigsStruct>(this[5].toTuple());
  }
}

export class SendQuoteCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class DiamondCutCall extends ethereum.Call {
  get inputs(): DiamondCutCall__Inputs {
    return new DiamondCutCall__Inputs(this);
  }

  get outputs(): DiamondCutCall__Outputs {
    return new DiamondCutCall__Outputs(this);
  }
}

export class DiamondCutCall__Inputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }

  get _diamondCut(): Array<DiamondCutCall_diamondCutStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DiamondCutCall_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DiamondCutCall__Outputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }
}

export class DiamondCutCall_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class AllocateCall extends ethereum.Call {
  get inputs(): AllocateCall__Inputs {
    return new AllocateCall__Inputs(this);
  }

  get outputs(): AllocateCall__Outputs {
    return new AllocateCall__Outputs(this);
  }
}

export class AllocateCall__Inputs {
  _call: AllocateCall;

  constructor(call: AllocateCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AllocateCall__Outputs {
  _call: AllocateCall;

  constructor(call: AllocateCall) {
    this._call = call;
  }
}

export class AllocateForPartyBCall extends ethereum.Call {
  get inputs(): AllocateForPartyBCall__Inputs {
    return new AllocateForPartyBCall__Inputs(this);
  }

  get outputs(): AllocateForPartyBCall__Outputs {
    return new AllocateForPartyBCall__Outputs(this);
  }
}

export class AllocateForPartyBCall__Inputs {
  _call: AllocateForPartyBCall;

  constructor(call: AllocateForPartyBCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get partyA(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AllocateForPartyBCall__Outputs {
  _call: AllocateForPartyBCall;

  constructor(call: AllocateForPartyBCall) {
    this._call = call;
  }
}

export class DeallocateCall extends ethereum.Call {
  get inputs(): DeallocateCall__Inputs {
    return new DeallocateCall__Inputs(this);
  }

  get outputs(): DeallocateCall__Outputs {
    return new DeallocateCall__Outputs(this);
  }
}

export class DeallocateCall__Inputs {
  _call: DeallocateCall;

  constructor(call: DeallocateCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get upnlSig(): DeallocateCallUpnlSigStruct {
    return changetype<DeallocateCallUpnlSigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class DeallocateCall__Outputs {
  _call: DeallocateCall;

  constructor(call: DeallocateCall) {
    this._call = call;
  }
}

export class DeallocateCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[3].toBytes();
  }

  get sigs(): DeallocateCallUpnlSigSigsStruct {
    return changetype<DeallocateCallUpnlSigSigsStruct>(this[4].toTuple());
  }
}

export class DeallocateCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class DeallocateForPartyBCall extends ethereum.Call {
  get inputs(): DeallocateForPartyBCall__Inputs {
    return new DeallocateForPartyBCall__Inputs(this);
  }

  get outputs(): DeallocateForPartyBCall__Outputs {
    return new DeallocateForPartyBCall__Outputs(this);
  }
}

export class DeallocateForPartyBCall__Inputs {
  _call: DeallocateForPartyBCall;

  constructor(call: DeallocateForPartyBCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get partyA(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get upnlSig(): DeallocateForPartyBCallUpnlSigStruct {
    return changetype<DeallocateForPartyBCallUpnlSigStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class DeallocateForPartyBCall__Outputs {
  _call: DeallocateForPartyBCall;

  constructor(call: DeallocateForPartyBCall) {
    this._call = call;
  }
}

export class DeallocateForPartyBCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[3].toBytes();
  }

  get sigs(): DeallocateForPartyBCallUpnlSigSigsStruct {
    return changetype<DeallocateForPartyBCallUpnlSigSigsStruct>(
      this[4].toTuple()
    );
  }
}

export class DeallocateForPartyBCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositAndAllocateCall extends ethereum.Call {
  get inputs(): DepositAndAllocateCall__Inputs {
    return new DepositAndAllocateCall__Inputs(this);
  }

  get outputs(): DepositAndAllocateCall__Outputs {
    return new DepositAndAllocateCall__Outputs(this);
  }
}

export class DepositAndAllocateCall__Inputs {
  _call: DepositAndAllocateCall;

  constructor(call: DepositAndAllocateCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositAndAllocateCall__Outputs {
  _call: DepositAndAllocateCall;

  constructor(call: DepositAndAllocateCall) {
    this._call = call;
  }
}

export class DepositForCall extends ethereum.Call {
  get inputs(): DepositForCall__Inputs {
    return new DepositForCall__Inputs(this);
  }

  get outputs(): DepositForCall__Outputs {
    return new DepositForCall__Outputs(this);
  }
}

export class DepositForCall__Inputs {
  _call: DepositForCall;

  constructor(call: DepositForCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositForCall__Outputs {
  _call: DepositForCall;

  constructor(call: DepositForCall) {
    this._call = call;
  }
}

export class TransferAllocationCall extends ethereum.Call {
  get inputs(): TransferAllocationCall__Inputs {
    return new TransferAllocationCall__Inputs(this);
  }

  get outputs(): TransferAllocationCall__Outputs {
    return new TransferAllocationCall__Outputs(this);
  }
}

export class TransferAllocationCall__Inputs {
  _call: TransferAllocationCall;

  constructor(call: TransferAllocationCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get origin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get upnlSig(): TransferAllocationCallUpnlSigStruct {
    return changetype<TransferAllocationCallUpnlSigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class TransferAllocationCall__Outputs {
  _call: TransferAllocationCall;

  constructor(call: TransferAllocationCall) {
    this._call = call;
  }
}

export class TransferAllocationCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[3].toBytes();
  }

  get sigs(): TransferAllocationCallUpnlSigSigsStruct {
    return changetype<TransferAllocationCallUpnlSigSigsStruct>(
      this[4].toTuple()
    );
  }
}

export class TransferAllocationCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawToCall extends ethereum.Call {
  get inputs(): WithdrawToCall__Inputs {
    return new WithdrawToCall__Inputs(this);
  }

  get outputs(): WithdrawToCall__Outputs {
    return new WithdrawToCall__Outputs(this);
  }
}

export class WithdrawToCall__Inputs {
  _call: WithdrawToCall;

  constructor(call: WithdrawToCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawToCall__Outputs {
  _call: WithdrawToCall;

  constructor(call: WithdrawToCall) {
    this._call = call;
  }
}

export class AcceptCancelCloseRequestCall extends ethereum.Call {
  get inputs(): AcceptCancelCloseRequestCall__Inputs {
    return new AcceptCancelCloseRequestCall__Inputs(this);
  }

  get outputs(): AcceptCancelCloseRequestCall__Outputs {
    return new AcceptCancelCloseRequestCall__Outputs(this);
  }
}

export class AcceptCancelCloseRequestCall__Inputs {
  _call: AcceptCancelCloseRequestCall;

  constructor(call: AcceptCancelCloseRequestCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptCancelCloseRequestCall__Outputs {
  _call: AcceptCancelCloseRequestCall;

  constructor(call: AcceptCancelCloseRequestCall) {
    this._call = call;
  }
}

export class AcceptCancelRequestCall extends ethereum.Call {
  get inputs(): AcceptCancelRequestCall__Inputs {
    return new AcceptCancelRequestCall__Inputs(this);
  }

  get outputs(): AcceptCancelRequestCall__Outputs {
    return new AcceptCancelRequestCall__Outputs(this);
  }
}

export class AcceptCancelRequestCall__Inputs {
  _call: AcceptCancelRequestCall;

  constructor(call: AcceptCancelRequestCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AcceptCancelRequestCall__Outputs {
  _call: AcceptCancelRequestCall;

  constructor(call: AcceptCancelRequestCall) {
    this._call = call;
  }
}

export class ChargeFundingRateCall extends ethereum.Call {
  get inputs(): ChargeFundingRateCall__Inputs {
    return new ChargeFundingRateCall__Inputs(this);
  }

  get outputs(): ChargeFundingRateCall__Outputs {
    return new ChargeFundingRateCall__Outputs(this);
  }
}

export class ChargeFundingRateCall__Inputs {
  _call: ChargeFundingRateCall;

  constructor(call: ChargeFundingRateCall) {
    this._call = call;
  }

  get partyA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get quoteIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get rates(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get upnlSig(): ChargeFundingRateCallUpnlSigStruct {
    return changetype<ChargeFundingRateCallUpnlSigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class ChargeFundingRateCall__Outputs {
  _call: ChargeFundingRateCall;

  constructor(call: ChargeFundingRateCall) {
    this._call = call;
  }
}

export class ChargeFundingRateCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnlPartyA(): BigInt {
    return this[2].toBigInt();
  }

  get upnlPartyB(): BigInt {
    return this[3].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[4].toBytes();
  }

  get sigs(): ChargeFundingRateCallUpnlSigSigsStruct {
    return changetype<ChargeFundingRateCallUpnlSigSigsStruct>(
      this[5].toTuple()
    );
  }
}

export class ChargeFundingRateCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class EmergencyClosePositionCall extends ethereum.Call {
  get inputs(): EmergencyClosePositionCall__Inputs {
    return new EmergencyClosePositionCall__Inputs(this);
  }

  get outputs(): EmergencyClosePositionCall__Outputs {
    return new EmergencyClosePositionCall__Outputs(this);
  }
}

export class EmergencyClosePositionCall__Inputs {
  _call: EmergencyClosePositionCall;

  constructor(call: EmergencyClosePositionCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get upnlSig(): EmergencyClosePositionCallUpnlSigStruct {
    return changetype<EmergencyClosePositionCallUpnlSigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class EmergencyClosePositionCall__Outputs {
  _call: EmergencyClosePositionCall;

  constructor(call: EmergencyClosePositionCall) {
    this._call = call;
  }
}

export class EmergencyClosePositionCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnlPartyA(): BigInt {
    return this[2].toBigInt();
  }

  get upnlPartyB(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[5].toBytes();
  }

  get sigs(): EmergencyClosePositionCallUpnlSigSigsStruct {
    return changetype<EmergencyClosePositionCallUpnlSigSigsStruct>(
      this[6].toTuple()
    );
  }
}

export class EmergencyClosePositionCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class FillCloseRequestCall extends ethereum.Call {
  get inputs(): FillCloseRequestCall__Inputs {
    return new FillCloseRequestCall__Inputs(this);
  }

  get outputs(): FillCloseRequestCall__Outputs {
    return new FillCloseRequestCall__Outputs(this);
  }
}

export class FillCloseRequestCall__Inputs {
  _call: FillCloseRequestCall;

  constructor(call: FillCloseRequestCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get filledAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get closedPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get upnlSig(): FillCloseRequestCallUpnlSigStruct {
    return changetype<FillCloseRequestCallUpnlSigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class FillCloseRequestCall__Outputs {
  _call: FillCloseRequestCall;

  constructor(call: FillCloseRequestCall) {
    this._call = call;
  }
}

export class FillCloseRequestCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnlPartyA(): BigInt {
    return this[2].toBigInt();
  }

  get upnlPartyB(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[5].toBytes();
  }

  get sigs(): FillCloseRequestCallUpnlSigSigsStruct {
    return changetype<FillCloseRequestCallUpnlSigSigsStruct>(this[6].toTuple());
  }
}

export class FillCloseRequestCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class LockAndOpenQuoteCall extends ethereum.Call {
  get inputs(): LockAndOpenQuoteCall__Inputs {
    return new LockAndOpenQuoteCall__Inputs(this);
  }

  get outputs(): LockAndOpenQuoteCall__Outputs {
    return new LockAndOpenQuoteCall__Outputs(this);
  }
}

export class LockAndOpenQuoteCall__Inputs {
  _call: LockAndOpenQuoteCall;

  constructor(call: LockAndOpenQuoteCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get filledAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get openedPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get upnlSig(): LockAndOpenQuoteCallUpnlSigStruct {
    return changetype<LockAndOpenQuoteCallUpnlSigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }

  get pairUpnlSig(): LockAndOpenQuoteCallPairUpnlSigStruct {
    return changetype<LockAndOpenQuoteCallPairUpnlSigStruct>(
      this._call.inputValues[4].value.toTuple()
    );
  }
}

export class LockAndOpenQuoteCall__Outputs {
  _call: LockAndOpenQuoteCall;

  constructor(call: LockAndOpenQuoteCall) {
    this._call = call;
  }
}

export class LockAndOpenQuoteCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[3].toBytes();
  }

  get sigs(): LockAndOpenQuoteCallUpnlSigSigsStruct {
    return changetype<LockAndOpenQuoteCallUpnlSigSigsStruct>(this[4].toTuple());
  }
}

export class LockAndOpenQuoteCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class LockAndOpenQuoteCallPairUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnlPartyA(): BigInt {
    return this[2].toBigInt();
  }

  get upnlPartyB(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[5].toBytes();
  }

  get sigs(): LockAndOpenQuoteCallPairUpnlSigSigsStruct {
    return changetype<LockAndOpenQuoteCallPairUpnlSigSigsStruct>(
      this[6].toTuple()
    );
  }
}

export class LockAndOpenQuoteCallPairUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class LockQuoteCall extends ethereum.Call {
  get inputs(): LockQuoteCall__Inputs {
    return new LockQuoteCall__Inputs(this);
  }

  get outputs(): LockQuoteCall__Outputs {
    return new LockQuoteCall__Outputs(this);
  }
}

export class LockQuoteCall__Inputs {
  _call: LockQuoteCall;

  constructor(call: LockQuoteCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get upnlSig(): LockQuoteCallUpnlSigStruct {
    return changetype<LockQuoteCallUpnlSigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class LockQuoteCall__Outputs {
  _call: LockQuoteCall;

  constructor(call: LockQuoteCall) {
    this._call = call;
  }
}

export class LockQuoteCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnl(): BigInt {
    return this[2].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[3].toBytes();
  }

  get sigs(): LockQuoteCallUpnlSigSigsStruct {
    return changetype<LockQuoteCallUpnlSigSigsStruct>(this[4].toTuple());
  }
}

export class LockQuoteCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class OpenPositionCall extends ethereum.Call {
  get inputs(): OpenPositionCall__Inputs {
    return new OpenPositionCall__Inputs(this);
  }

  get outputs(): OpenPositionCall__Outputs {
    return new OpenPositionCall__Outputs(this);
  }
}

export class OpenPositionCall__Inputs {
  _call: OpenPositionCall;

  constructor(call: OpenPositionCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get filledAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get openedPrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get upnlSig(): OpenPositionCallUpnlSigStruct {
    return changetype<OpenPositionCallUpnlSigStruct>(
      this._call.inputValues[3].value.toTuple()
    );
  }
}

export class OpenPositionCall__Outputs {
  _call: OpenPositionCall;

  constructor(call: OpenPositionCall) {
    this._call = call;
  }
}

export class OpenPositionCallUpnlSigStruct extends ethereum.Tuple {
  get reqId(): Bytes {
    return this[0].toBytes();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get upnlPartyA(): BigInt {
    return this[2].toBigInt();
  }

  get upnlPartyB(): BigInt {
    return this[3].toBigInt();
  }

  get price(): BigInt {
    return this[4].toBigInt();
  }

  get gatewaySignature(): Bytes {
    return this[5].toBytes();
  }

  get sigs(): OpenPositionCallUpnlSigSigsStruct {
    return changetype<OpenPositionCallUpnlSigSigsStruct>(this[6].toTuple());
  }
}

export class OpenPositionCallUpnlSigSigsStruct extends ethereum.Tuple {
  get signature(): BigInt {
    return this[0].toBigInt();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get nonce(): Address {
    return this[2].toAddress();
  }
}

export class UnlockQuoteCall extends ethereum.Call {
  get inputs(): UnlockQuoteCall__Inputs {
    return new UnlockQuoteCall__Inputs(this);
  }

  get outputs(): UnlockQuoteCall__Outputs {
    return new UnlockQuoteCall__Outputs(this);
  }
}

export class UnlockQuoteCall__Inputs {
  _call: UnlockQuoteCall;

  constructor(call: UnlockQuoteCall) {
    this._call = call;
  }

  get quoteId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnlockQuoteCall__Outputs {
  _call: UnlockQuoteCall;

  constructor(call: UnlockQuoteCall) {
    this._call = call;
  }
}

export class AggregateCall extends ethereum.Call {
  get inputs(): AggregateCall__Inputs {
    return new AggregateCall__Inputs(this);
  }

  get outputs(): AggregateCall__Outputs {
    return new AggregateCall__Outputs(this);
  }
}

export class AggregateCall__Inputs {
  _call: AggregateCall;

  constructor(call: AggregateCall) {
    this._call = call;
  }

  get calls(): Array<AggregateCallCallsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      AggregateCallCallsStruct
    >();
  }
}

export class AggregateCall__Outputs {
  _call: AggregateCall;

  constructor(call: AggregateCall) {
    this._call = call;
  }

  get blockNumber(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get returnData(): Array<Bytes> {
    return this._call.outputValues[1].value.toBytesArray();
  }
}

export class AggregateCallCallsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get callData(): Bytes {
    return this[1].toBytes();
  }
}

export class Aggregate3Call extends ethereum.Call {
  get inputs(): Aggregate3Call__Inputs {
    return new Aggregate3Call__Inputs(this);
  }

  get outputs(): Aggregate3Call__Outputs {
    return new Aggregate3Call__Outputs(this);
  }
}

export class Aggregate3Call__Inputs {
  _call: Aggregate3Call;

  constructor(call: Aggregate3Call) {
    this._call = call;
  }

  get calls(): Array<Aggregate3CallCallsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      Aggregate3CallCallsStruct
    >();
  }
}

export class Aggregate3Call__Outputs {
  _call: Aggregate3Call;

  constructor(call: Aggregate3Call) {
    this._call = call;
  }

  get returnData(): Array<Aggregate3CallReturnDataStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      Aggregate3CallReturnDataStruct
    >();
  }
}

export class Aggregate3CallCallsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get allowFailure(): boolean {
    return this[1].toBoolean();
  }

  get callData(): Bytes {
    return this[2].toBytes();
  }
}

export class Aggregate3CallReturnDataStruct extends ethereum.Tuple {
  get success(): boolean {
    return this[0].toBoolean();
  }

  get returnData(): Bytes {
    return this[1].toBytes();
  }
}

export class Aggregate3ValueCall extends ethereum.Call {
  get inputs(): Aggregate3ValueCall__Inputs {
    return new Aggregate3ValueCall__Inputs(this);
  }

  get outputs(): Aggregate3ValueCall__Outputs {
    return new Aggregate3ValueCall__Outputs(this);
  }
}

export class Aggregate3ValueCall__Inputs {
  _call: Aggregate3ValueCall;

  constructor(call: Aggregate3ValueCall) {
    this._call = call;
  }

  get calls(): Array<Aggregate3ValueCallCallsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      Aggregate3ValueCallCallsStruct
    >();
  }
}

export class Aggregate3ValueCall__Outputs {
  _call: Aggregate3ValueCall;

  constructor(call: Aggregate3ValueCall) {
    this._call = call;
  }

  get returnData(): Array<Aggregate3ValueCallReturnDataStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      Aggregate3ValueCallReturnDataStruct
    >();
  }
}

export class Aggregate3ValueCallCallsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get allowFailure(): boolean {
    return this[1].toBoolean();
  }

  get value(): BigInt {
    return this[2].toBigInt();
  }

  get callData(): Bytes {
    return this[3].toBytes();
  }
}

export class Aggregate3ValueCallReturnDataStruct extends ethereum.Tuple {
  get success(): boolean {
    return this[0].toBoolean();
  }

  get returnData(): Bytes {
    return this[1].toBytes();
  }
}

export class BlockAndAggregateCall extends ethereum.Call {
  get inputs(): BlockAndAggregateCall__Inputs {
    return new BlockAndAggregateCall__Inputs(this);
  }

  get outputs(): BlockAndAggregateCall__Outputs {
    return new BlockAndAggregateCall__Outputs(this);
  }
}

export class BlockAndAggregateCall__Inputs {
  _call: BlockAndAggregateCall;

  constructor(call: BlockAndAggregateCall) {
    this._call = call;
  }

  get calls(): Array<BlockAndAggregateCallCallsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      BlockAndAggregateCallCallsStruct
    >();
  }
}

export class BlockAndAggregateCall__Outputs {
  _call: BlockAndAggregateCall;

  constructor(call: BlockAndAggregateCall) {
    this._call = call;
  }

  get blockNumber(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get blockHash(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }

  get returnData(): Array<BlockAndAggregateCallReturnDataStruct> {
    return this._call.outputValues[2].value.toTupleArray<
      BlockAndAggregateCallReturnDataStruct
    >();
  }
}

export class BlockAndAggregateCallCallsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get callData(): Bytes {
    return this[1].toBytes();
  }
}

export class BlockAndAggregateCallReturnDataStruct extends ethereum.Tuple {
  get success(): boolean {
    return this[0].toBoolean();
  }

  get returnData(): Bytes {
    return this[1].toBytes();
  }
}

export class TryAggregateCall extends ethereum.Call {
  get inputs(): TryAggregateCall__Inputs {
    return new TryAggregateCall__Inputs(this);
  }

  get outputs(): TryAggregateCall__Outputs {
    return new TryAggregateCall__Outputs(this);
  }
}

export class TryAggregateCall__Inputs {
  _call: TryAggregateCall;

  constructor(call: TryAggregateCall) {
    this._call = call;
  }

  get requireSuccess(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get calls(): Array<TryAggregateCallCallsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      TryAggregateCallCallsStruct
    >();
  }
}

export class TryAggregateCall__Outputs {
  _call: TryAggregateCall;

  constructor(call: TryAggregateCall) {
    this._call = call;
  }

  get returnData(): Array<TryAggregateCallReturnDataStruct> {
    return this._call.outputValues[0].value.toTupleArray<
      TryAggregateCallReturnDataStruct
    >();
  }
}

export class TryAggregateCallCallsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get callData(): Bytes {
    return this[1].toBytes();
  }
}

export class TryAggregateCallReturnDataStruct extends ethereum.Tuple {
  get success(): boolean {
    return this[0].toBoolean();
  }

  get returnData(): Bytes {
    return this[1].toBytes();
  }
}

export class TryBlockAndAggregateCall extends ethereum.Call {
  get inputs(): TryBlockAndAggregateCall__Inputs {
    return new TryBlockAndAggregateCall__Inputs(this);
  }

  get outputs(): TryBlockAndAggregateCall__Outputs {
    return new TryBlockAndAggregateCall__Outputs(this);
  }
}

export class TryBlockAndAggregateCall__Inputs {
  _call: TryBlockAndAggregateCall;

  constructor(call: TryBlockAndAggregateCall) {
    this._call = call;
  }

  get requireSuccess(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }

  get calls(): Array<TryBlockAndAggregateCallCallsStruct> {
    return this._call.inputValues[1].value.toTupleArray<
      TryBlockAndAggregateCallCallsStruct
    >();
  }
}

export class TryBlockAndAggregateCall__Outputs {
  _call: TryBlockAndAggregateCall;

  constructor(call: TryBlockAndAggregateCall) {
    this._call = call;
  }

  get blockNumber(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get blockHash(): Bytes {
    return this._call.outputValues[1].value.toBytes();
  }

  get returnData(): Array<TryBlockAndAggregateCallReturnDataStruct> {
    return this._call.outputValues[2].value.toTupleArray<
      TryBlockAndAggregateCallReturnDataStruct
    >();
  }
}

export class TryBlockAndAggregateCallCallsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get callData(): Bytes {
    return this[1].toBytes();
  }
}

export class TryBlockAndAggregateCallReturnDataStruct extends ethereum.Tuple {
  get success(): boolean {
    return this[0].toBoolean();
  }

  get returnData(): Bytes {
    return this[1].toBytes();
  }
}
