// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddAccount extends ethereum.Event {
  get params(): AddAccount__Params {
    return new AddAccount__Params(this);
  }
}

export class AddAccount__Params {
  _event: AddAccount;

  constructor(event: AddAccount) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class AllocateForAccount extends ethereum.Event {
  get params(): AllocateForAccount__Params {
    return new AllocateForAccount__Params(this);
  }
}

export class AllocateForAccount__Params {
  _event: AllocateForAccount;

  constructor(event: AllocateForAccount) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Call extends ethereum.Event {
  get params(): Call__Params {
    return new Call__Params(this);
  }
}

export class Call__Params {
  _event: Call;

  constructor(event: Call) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get _success(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get _resultData(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class DeployContract extends ethereum.Event {
  get params(): DeployContract__Params {
    return new DeployContract__Params(this);
  }
}

export class DeployContract__Params {
  _event: DeployContract;

  constructor(event: DeployContract) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DepositForAccount extends ethereum.Event {
  get params(): DepositForAccount__Params {
    return new DepositForAccount__Params(this);
  }
}

export class DepositForAccount__Params {
  _event: DepositForAccount;

  constructor(event: DepositForAccount) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EditAccountName extends ethereum.Event {
  get params(): EditAccountName__Params {
    return new EditAccountName__Params(this);
  }
}

export class EditAccountName__Params {
  _event: EditAccountName;

  constructor(event: EditAccountName) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newName(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SetAccountImplementation extends ethereum.Event {
  get params(): SetAccountImplementation__Params {
    return new SetAccountImplementation__Params(this);
  }
}

export class SetAccountImplementation__Params {
  _event: SetAccountImplementation;

  constructor(event: SetAccountImplementation) {
    this._event = event;
  }

  get oldAddress(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newAddress(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class SetDeusV3Address extends ethereum.Event {
  get params(): SetDeusV3Address__Params {
    return new SetDeusV3Address__Params(this);
  }
}

export class SetDeusV3Address__Params {
  _event: SetDeusV3Address;

  constructor(event: SetDeusV3Address) {
    this._event = event;
  }

  get oldAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WithdrawFromAccount extends ethereum.Event {
  get params(): WithdrawFromAccount__Params {
    return new WithdrawFromAccount__Params(this);
  }
}

export class WithdrawFromAccount__Params {
  _event: WithdrawFromAccount;

  constructor(event: WithdrawFromAccount) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class symmioMultiAccount__accountsResult {
  value0: Address;
  value1: string;

  constructor(value0: Address, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getAccountAddress(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }
}

export class symmioMultiAccount__getAccountsResultValue0Struct extends ethereum.Tuple {
  get accountAddress(): Address {
    return this[0].toAddress();
  }

  get name(): string {
    return this[1].toString();
  }
}

export class symmioMultiAccount extends ethereum.SmartContract {
  static bind(address: Address): symmioMultiAccount {
    return new symmioMultiAccount("symmioMultiAccount", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  PAUSER_ROLE(): Bytes {
    let result = super.call("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_PAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("PAUSER_ROLE", "PAUSER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SETTER_ROLE(): Bytes {
    let result = super.call("SETTER_ROLE", "SETTER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_SETTER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("SETTER_ROLE", "SETTER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UNPAUSER_ROLE(): Bytes {
    let result = super.call("UNPAUSER_ROLE", "UNPAUSER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UNPAUSER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "UNPAUSER_ROLE",
      "UNPAUSER_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  accountImplementaion(): Bytes {
    let result = super.call(
      "accountImplementaion",
      "accountImplementaion():(bytes)",
      []
    );

    return result[0].toBytes();
  }

  try_accountImplementaion(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "accountImplementaion",
      "accountImplementaion():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  accounts(
    param0: Address,
    param1: BigInt
  ): symmioMultiAccount__accountsResult {
    let result = super.call(
      "accounts",
      "accounts(address,uint256):(address,string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new symmioMultiAccount__accountsResult(
      result[0].toAddress(),
      result[1].toString()
    );
  }

  try_accounts(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<symmioMultiAccount__accountsResult> {
    let result = super.tryCall(
      "accounts",
      "accounts(address,uint256):(address,string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new symmioMultiAccount__accountsResult(
        value[0].toAddress(),
        value[1].toString()
      )
    );
  }

  accountsAdmin(): Address {
    let result = super.call("accountsAdmin", "accountsAdmin():(address)", []);

    return result[0].toAddress();
  }

  try_accountsAdmin(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "accountsAdmin",
      "accountsAdmin():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deusV3Address(): Address {
    let result = super.call("deusV3Address", "deusV3Address():(address)", []);

    return result[0].toAddress();
  }

  try_deusV3Address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deusV3Address",
      "deusV3Address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAccounts(
    user: Address,
    start: BigInt,
    size: BigInt
  ): Array<symmioMultiAccount__getAccountsResultValue0Struct> {
    let result = super.call(
      "getAccounts",
      "getAccounts(address,uint256,uint256):((address,string)[])",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );

    return result[0].toTupleArray<
      symmioMultiAccount__getAccountsResultValue0Struct
    >();
  }

  try_getAccounts(
    user: Address,
    start: BigInt,
    size: BigInt
  ): ethereum.CallResult<
    Array<symmioMultiAccount__getAccountsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAccounts",
      "getAccounts(address,uint256,uint256):((address,string)[])",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(start),
        ethereum.Value.fromUnsignedBigInt(size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<symmioMultiAccount__getAccountsResultValue0Struct>()
    );
  }

  getAccountsLength(user: Address): BigInt {
    let result = super.call(
      "getAccountsLength",
      "getAccountsLength(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_getAccountsLength(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAccountsLength",
      "getAccountsLength(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  indexOfAccount(param0: Address): BigInt {
    let result = super.call(
      "indexOfAccount",
      "indexOfAccount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_indexOfAccount(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "indexOfAccount",
      "indexOfAccount(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(param0: Address): Address {
    let result = super.call("owner", "owner(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_owner(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  saltCounter(): BigInt {
    let result = super.call("saltCounter", "saltCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_saltCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("saltCounter", "saltCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _callCall extends ethereum.Call {
  get inputs(): _callCall__Inputs {
    return new _callCall__Inputs(this);
  }

  get outputs(): _callCall__Outputs {
    return new _callCall__Outputs(this);
  }
}

export class _callCall__Inputs {
  _call: _callCall;

  constructor(call: _callCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _calldatas(): Array<Bytes> {
    return this._call.inputValues[1].value.toBytesArray();
  }
}

export class _callCall__Outputs {
  _call: _callCall;

  constructor(call: _callCall) {
    this._call = call;
  }
}

export class AddAccountCall extends ethereum.Call {
  get inputs(): AddAccountCall__Inputs {
    return new AddAccountCall__Inputs(this);
  }

  get outputs(): AddAccountCall__Outputs {
    return new AddAccountCall__Outputs(this);
  }
}

export class AddAccountCall__Inputs {
  _call: AddAccountCall;

  constructor(call: AddAccountCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddAccountCall__Outputs {
  _call: AddAccountCall;

  constructor(call: AddAccountCall) {
    this._call = call;
  }
}

export class DepositAndAllocateForAccountCall extends ethereum.Call {
  get inputs(): DepositAndAllocateForAccountCall__Inputs {
    return new DepositAndAllocateForAccountCall__Inputs(this);
  }

  get outputs(): DepositAndAllocateForAccountCall__Outputs {
    return new DepositAndAllocateForAccountCall__Outputs(this);
  }
}

export class DepositAndAllocateForAccountCall__Inputs {
  _call: DepositAndAllocateForAccountCall;

  constructor(call: DepositAndAllocateForAccountCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositAndAllocateForAccountCall__Outputs {
  _call: DepositAndAllocateForAccountCall;

  constructor(call: DepositAndAllocateForAccountCall) {
    this._call = call;
  }
}

export class DepositForAccountCall extends ethereum.Call {
  get inputs(): DepositForAccountCall__Inputs {
    return new DepositForAccountCall__Inputs(this);
  }

  get outputs(): DepositForAccountCall__Outputs {
    return new DepositForAccountCall__Outputs(this);
  }
}

export class DepositForAccountCall__Inputs {
  _call: DepositForAccountCall;

  constructor(call: DepositForAccountCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositForAccountCall__Outputs {
  _call: DepositForAccountCall;

  constructor(call: DepositForAccountCall) {
    this._call = call;
  }
}

export class EditAccountNameCall extends ethereum.Call {
  get inputs(): EditAccountNameCall__Inputs {
    return new EditAccountNameCall__Inputs(this);
  }

  get outputs(): EditAccountNameCall__Outputs {
    return new EditAccountNameCall__Outputs(this);
  }
}

export class EditAccountNameCall__Inputs {
  _call: EditAccountNameCall;

  constructor(call: EditAccountNameCall) {
    this._call = call;
  }

  get accountAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class EditAccountNameCall__Outputs {
  _call: EditAccountNameCall;

  constructor(call: EditAccountNameCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get deusV3Address_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get accountImplementaion_(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetAccountImplementaionCall extends ethereum.Call {
  get inputs(): SetAccountImplementaionCall__Inputs {
    return new SetAccountImplementaionCall__Inputs(this);
  }

  get outputs(): SetAccountImplementaionCall__Outputs {
    return new SetAccountImplementaionCall__Outputs(this);
  }
}

export class SetAccountImplementaionCall__Inputs {
  _call: SetAccountImplementaionCall;

  constructor(call: SetAccountImplementaionCall) {
    this._call = call;
  }

  get accountImplementaion_(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetAccountImplementaionCall__Outputs {
  _call: SetAccountImplementaionCall;

  constructor(call: SetAccountImplementaionCall) {
    this._call = call;
  }
}

export class SetDeusV3AddressCall extends ethereum.Call {
  get inputs(): SetDeusV3AddressCall__Inputs {
    return new SetDeusV3AddressCall__Inputs(this);
  }

  get outputs(): SetDeusV3AddressCall__Outputs {
    return new SetDeusV3AddressCall__Outputs(this);
  }
}

export class SetDeusV3AddressCall__Inputs {
  _call: SetDeusV3AddressCall;

  constructor(call: SetDeusV3AddressCall) {
    this._call = call;
  }

  get deusV3Address_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDeusV3AddressCall__Outputs {
  _call: SetDeusV3AddressCall;

  constructor(call: SetDeusV3AddressCall) {
    this._call = call;
  }
}

export class TrasnferAccountCall extends ethereum.Call {
  get inputs(): TrasnferAccountCall__Inputs {
    return new TrasnferAccountCall__Inputs(this);
  }

  get outputs(): TrasnferAccountCall__Outputs {
    return new TrasnferAccountCall__Outputs(this);
  }
}

export class TrasnferAccountCall__Inputs {
  _call: TrasnferAccountCall;

  constructor(call: TrasnferAccountCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get accountAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TrasnferAccountCall__Outputs {
  _call: TrasnferAccountCall;

  constructor(call: TrasnferAccountCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawFromAccountCall extends ethereum.Call {
  get inputs(): WithdrawFromAccountCall__Inputs {
    return new WithdrawFromAccountCall__Inputs(this);
  }

  get outputs(): WithdrawFromAccountCall__Outputs {
    return new WithdrawFromAccountCall__Outputs(this);
  }
}

export class WithdrawFromAccountCall__Inputs {
  _call: WithdrawFromAccountCall;

  constructor(call: WithdrawFromAccountCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawFromAccountCall__Outputs {
  _call: WithdrawFromAccountCall;

  constructor(call: WithdrawFromAccountCall) {
    this._call = call;
  }
}
